module {
  hw.module @atax_float(in %A_loadData : i32, in %x_loadData : i32, in %y_loadData : i32, in %tmp_loadData : i32, in %A_start : !handshake.control<>, in %x_start : !handshake.control<>, in %y_start : !handshake.control<>, in %tmp_start : !handshake.control<>, in %start : !handshake.control<>, in %clk : i1, in %rst : i1, out out0 : !handshake.channel<i32>, out A_end : !handshake.control<>, out x_end : !handshake.control<>, out y_end : !handshake.control<>, out tmp_end : !handshake.control<>, out end : !handshake.control<>, out A_loadEn : i1, out A_loadAddr : i7, out A_storeEn : i1, out A_storeAddr : i7, out A_storeData : i32, out x_loadEn : i1, out x_loadAddr : i4, out x_storeEn : i1, out x_storeAddr : i4, out x_storeData : i32, out y_loadEn : i1, out y_loadAddr : i4, out y_storeEn : i1, out y_storeAddr : i4, out y_storeData : i32, out tmp_loadEn : i1, out tmp_loadAddr : i4, out tmp_storeEn : i1, out tmp_storeAddr : i4, out tmp_storeData : i32) {
    %fork0.outs_0, %fork0.outs_1, %fork0.outs_2, %fork0.outs_3, %fork0.outs_4, %fork0.outs_5, %fork0.outs_6, %fork0.outs_7, %fork0.outs_8, %fork0.outs_9, %fork0.outs_10 = hw.instance "fork0" @handshake_fork_0(ins: %start: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>, outs_2: !handshake.control<>, outs_3: !handshake.control<>, outs_4: !handshake.control<>, outs_5: !handshake.control<>, outs_6: !handshake.control<>, outs_7: !handshake.control<>, outs_8: !handshake.control<>, outs_9: !handshake.control<>, outs_10: !handshake.control<>)
    %lsq2.ldData_0, %lsq2.ldData_1, %lsq2.memEnd, %lsq2.loadEn, %lsq2.loadAddr, %lsq2.storeEn, %lsq2.storeAddr, %lsq2.storeData = hw.instance "lsq2" @handshake_lsq_lsq2(loadData: %tmp_loadData: i32, memStart: %tmp_start: !handshake.control<>, ctrl_0: %lazy_fork0.outs_1: !handshake.control<>, ldAddr_0: %load0.addrOut: !handshake.channel<i4>, ctrl_1: %lazy_fork2.outs_1: !handshake.control<>, stAddr_0: %store1.addrOut: !handshake.channel<i4>, stData_0: %store1.dataToMem: !handshake.channel<i32>, ctrl_2: %fork23.outs_0: !handshake.control<>, ldAddr_1: %load5.addrOut: !handshake.channel<i4>, ctrlEnd: %fork23.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, ldData_1: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %lsq3.ldData_0, %lsq3.memEnd, %lsq3.loadEn, %lsq3.loadAddr, %lsq3.storeEn, %lsq3.storeAddr, %lsq3.storeData = hw.instance "lsq3" @handshake_lsq_lsq3(loadData: %y_loadData: i32, memStart: %y_start: !handshake.control<>, ctrl_0: %lazy_fork1.outs_1: !handshake.control<>, ldAddr_0: %load3.addrOut: !handshake.channel<i4>, stAddr_0: %store0.addrOut: !handshake.channel<i4>, stData_0: %store0.dataToMem: !handshake.channel<i32>, ctrlEnd: %fork0.outs_2: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %mem_controller2.ldData_0, %mem_controller2.memEnd, %mem_controller2.loadEn, %mem_controller2.loadAddr, %mem_controller2.storeEn, %mem_controller2.storeAddr, %mem_controller2.storeData = hw.instance "mem_controller2" @handshake_mem_controller_0(loadData: %x_loadData: i32, memStart: %x_start: !handshake.control<>, ldAddr_0: %load2.addrOut: !handshake.channel<i4>, ctrlEnd: %fork0.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %mem_controller3.ldData_0, %mem_controller3.ldData_1, %mem_controller3.memEnd, %mem_controller3.loadEn, %mem_controller3.loadAddr, %mem_controller3.storeEn, %mem_controller3.storeAddr, %mem_controller3.storeData = hw.instance "mem_controller3" @handshake_mem_controller_1(loadData: %A_loadData: i32, memStart: %A_start: !handshake.control<>, ldAddr_0: %load1.addrOut: !handshake.channel<i7>, ldAddr_1: %load4.addrOut: !handshake.channel<i7>, ctrlEnd: %fork0.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, ldData_1: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i7, storeEn: i1, storeAddr: i7, storeData: i32)
    %mux1.outs = hw.instance "mux1" @handshake_mux_0(index: %fork2.outs_2: !handshake.channel<i1>, ins_0: %fork0.outs_10: !handshake.control<>, ins_1: %cond_br9.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %constant16.outs = hw.instance "constant16" @handshake_constant_0(ctrl: %fork0.outs_9: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %fork1.outs_0, %fork1.outs_1 = hw.instance "fork1" @handshake_fork_1(ins: %constant16.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>)
    %extsi13.outs = hw.instance "extsi13" @handshake_extsi_0(ins: %fork1.outs_0: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer21.outs = hw.instance "buffer21" @handshake_buffer_0(ins: %fork2.outs_3: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %mux4.outs = hw.instance "mux4" @handshake_mux_0(index: %buffer21.outs: !handshake.channel<i1>, ins_0: %fork0.outs_8: !handshake.control<>, ins_1: %cond_br8.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %merge1.outs = hw.instance "merge1" @handshake_merge_0(ins_0: %fork1.outs_1: !handshake.channel<i1>, ins_1: %fork22.outs_4: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %buffer17.outs = hw.instance "buffer17" @handshake_buffer_1(ins: %merge1.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %fork2.outs_0, %fork2.outs_1, %fork2.outs_2, %fork2.outs_3 = hw.instance "fork2" @handshake_fork_2(ins: %buffer17.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>)
    %buffer11.outs = hw.instance "buffer11" @handshake_buffer_2(ins: %mux1.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer12.outs = hw.instance "buffer12" @handshake_buffer_3(ins: %buffer11.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %lazy_fork0.outs_0, %lazy_fork0.outs_1 = hw.instance "lazy_fork0" @handshake_lazy_fork_0(ins: %buffer12.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>)
    %mux0.outs = hw.instance "mux0" @handshake_mux_0(index: %fork2.outs_1: !handshake.channel<i1>, ins_0: %fork0.outs_7: !handshake.control<>, ins_1: %cond_br45.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer24.outs = hw.instance "buffer24" @handshake_buffer_2(ins: %mux0.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer25.outs = hw.instance "buffer25" @handshake_buffer_3(ins: %buffer24.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %fork3.outs_0, %fork3.outs_1, %fork3.outs_2, %fork3.outs_3, %fork3.outs_4, %fork3.outs_5 = hw.instance "fork3" @handshake_fork_3(ins: %buffer25.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>, outs_2: !handshake.control<>, outs_3: !handshake.control<>, outs_4: !handshake.control<>, outs_5: !handshake.control<>)
    %mux10.outs = hw.instance "mux10" @handshake_mux_1(index: %fork2.outs_0: !handshake.channel<i1>, ins_0: %extsi13.outs: !handshake.channel<i5>, ins_1: %cond_br44.trueOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer32.outs = hw.instance "buffer32" @handshake_buffer_4(ins: %mux10.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer33.outs = hw.instance "buffer33" @handshake_buffer_5(ins: %buffer32.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %fork4.outs_0, %fork4.outs_1, %fork4.outs_2, %fork4.outs_3, %fork4.outs_4 = hw.instance "fork4" @handshake_fork_4(ins: %buffer33.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i5>, outs_1: !handshake.channel<i5>, outs_2: !handshake.channel<i5>, outs_3: !handshake.channel<i5>, outs_4: !handshake.channel<i5>)
    %extsi14.outs = hw.instance "extsi14" @handshake_extsi_1(ins: %fork4.outs_2: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %buffer34.outs = hw.instance "buffer34" @handshake_buffer_6(ins: %fork4.outs_0: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %trunci0.outs = hw.instance "trunci0" @handshake_trunci_0(ins: %buffer34.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %trunci1.outs = hw.instance "trunci1" @handshake_trunci_0(ins: %fork4.outs_1: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %constant0.outs = hw.instance "constant0" @handshake_constant_0(ctrl: %fork3.outs_2: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %extsi15.outs = hw.instance "extsi15" @handshake_extsi_0(ins: %constant0.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %load0.addrOut, %load0.dataOut = hw.instance "load0" @handshake_load_0(addrIn: %trunci1.outs: !handshake.channel<i4>, dataFromMem: %lsq2.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %buffer71.outs = hw.instance "buffer71" @handshake_buffer_0(ins: %fork12.outs_2: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %cond_br35.trueOut, %cond_br35.falseOut = hw.instance "cond_br35" @handshake_cond_br_0(condition: %buffer71.outs: !handshake.channel<i1>, data: %constant1.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i1>, falseOut: !handshake.channel<i1>)
    hw.instance "sink0" @handshake_sink_0(ins: %cond_br35.trueOut: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> ()
    %extsi12.outs = hw.instance "extsi12" @handshake_extsi_0(ins: %cond_br35.falseOut: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %cond_br36.trueOut, %cond_br36.falseOut = hw.instance "cond_br36" @handshake_cond_br_1(condition: %fork12.outs_5: !handshake.channel<i1>, data: %addf0.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    %fork5.outs_0, %fork5.outs_1 = hw.instance "fork5" @handshake_fork_5(ins: %cond_br36.falseOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>)
    %cond_br37.trueOut, %cond_br37.falseOut = hw.instance "cond_br37" @handshake_cond_br_2(condition: %fork12.outs_0: !handshake.channel<i1>, data: %trunci4.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i5>, falseOut: !handshake.channel<i5>)
    hw.instance "sink1" @handshake_sink_1(ins: %cond_br37.falseOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> ()
    %cond_br38.trueOut, %cond_br38.falseOut = hw.instance "cond_br38" @handshake_cond_br_3(condition: %fork12.outs_4: !handshake.channel<i1>, data: %fork8.outs_4: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    hw.instance "sink2" @handshake_sink_2(ins: %cond_br38.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> ()
    %cond_br39.trueOut, %cond_br39.falseOut = hw.instance "cond_br39" @handshake_cond_br_2(condition: %fork12.outs_1: !handshake.channel<i1>, data: %fork7.outs_2: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i5>, falseOut: !handshake.channel<i5>)
    hw.instance "sink3" @handshake_sink_1(ins: %cond_br39.falseOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> ()
    %constant23.outs = hw.instance "constant23" @handshake_constant_0(ctrl: %fork0.outs_6: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %merge11.outs = hw.instance "merge11" @handshake_merge_0(ins_0: %constant23.outs: !handshake.channel<i1>, ins_1: %fork12.outs_3: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %buffer41.outs = hw.instance "buffer41" @handshake_buffer_1(ins: %merge11.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %fork6.outs_0, %fork6.outs_1, %fork6.outs_2, %fork6.outs_3 = hw.instance "fork6" @handshake_fork_2(ins: %buffer41.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>)
    %mux11.outs = hw.instance "mux11" @handshake_mux_1(index: %fork6.outs_0: !handshake.channel<i1>, ins_0: %fork4.outs_4: !handshake.channel<i5>, ins_1: %cond_br39.trueOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer46.outs = hw.instance "buffer46" @handshake_buffer_4(ins: %mux11.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer47.outs = hw.instance "buffer47" @handshake_buffer_5(ins: %buffer46.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %fork7.outs_0, %fork7.outs_1, %fork7.outs_2 = hw.instance "fork7" @handshake_fork_6(ins: %buffer47.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i5>, outs_1: !handshake.channel<i5>, outs_2: !handshake.channel<i5>)
    %trunci2.outs = hw.instance "trunci2" @handshake_trunci_0(ins: %fork7.outs_0: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %extsi16.outs = hw.instance "extsi16" @handshake_extsi_2(ins: %trunci2.outs: !handshake.channel<i4>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %extsi17.outs = hw.instance "extsi17" @handshake_extsi_1(ins: %fork7.outs_1: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %mux13.outs = hw.instance "mux13" @handshake_mux_0(index: %fork6.outs_3: !handshake.channel<i1>, ins_0: %fork3.outs_5: !handshake.control<>, ins_1: %cond_br38.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer51.outs = hw.instance "buffer51" @handshake_buffer_2(ins: %mux13.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer52.outs = hw.instance "buffer52" @handshake_buffer_3(ins: %buffer51.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %fork8.outs_0, %fork8.outs_1, %fork8.outs_2, %fork8.outs_3, %fork8.outs_4 = hw.instance "fork8" @handshake_fork_7(ins: %buffer52.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>, outs_2: !handshake.control<>, outs_3: !handshake.control<>, outs_4: !handshake.control<>)
    %mux17.outs = hw.instance "mux17" @handshake_mux_2(index: %fork6.outs_2: !handshake.channel<i1>, ins_0: %load0.dataOut: !handshake.channel<i32>, ins_1: %cond_br36.trueOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %mux18.outs = hw.instance "mux18" @handshake_mux_1(index: %fork6.outs_1: !handshake.channel<i1>, ins_0: %extsi15.outs: !handshake.channel<i5>, ins_1: %cond_br37.trueOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer60.outs = hw.instance "buffer60" @handshake_buffer_4(ins: %mux18.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer61.outs = hw.instance "buffer61" @handshake_buffer_5(ins: %buffer60.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %fork9.outs_0, %fork9.outs_1, %fork9.outs_2 = hw.instance "fork9" @handshake_fork_6(ins: %buffer61.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i5>, outs_1: !handshake.channel<i5>, outs_2: !handshake.channel<i5>)
    %extsi18.outs = hw.instance "extsi18" @handshake_extsi_3(ins: %fork9.outs_0: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %extsi19.outs = hw.instance "extsi19" @handshake_extsi_1(ins: %fork9.outs_2: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %trunci3.outs = hw.instance "trunci3" @handshake_trunci_0(ins: %fork9.outs_1: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %buffer56.outs = hw.instance "buffer56" @handshake_buffer_7(ins: %fork8.outs_3: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %constant1.outs = hw.instance "constant1" @handshake_constant_0(ctrl: %buffer56.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %buffer55.outs = hw.instance "buffer55" @handshake_buffer_7(ins: %fork8.outs_2: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %constant2.outs = hw.instance "constant2" @handshake_constant_1(ctrl: %buffer55.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %extsi20.outs = hw.instance "extsi20" @handshake_extsi_1(ins: %constant2.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %constant4.outs = hw.instance "constant4" @handshake_constant_2(ctrl: %fork8.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i2>)
    %fork10.outs_0, %fork10.outs_1 = hw.instance "fork10" @handshake_fork_8(ins: %constant4.outs: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i2>, outs_1: !handshake.channel<i2>)
    %extui0.outs = hw.instance "extui0" @handshake_extui_0(ins: %fork10.outs_0: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %extsi21.outs = hw.instance "extsi21" @handshake_extsi_4(ins: %fork10.outs_1: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %constant18.outs = hw.instance "constant18" @handshake_constant_3(ctrl: %fork8.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i3>)
    %extui1.outs = hw.instance "extui1" @handshake_extui_1(ins: %constant18.outs: !handshake.channel<i3>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %shli6.result = hw.instance "shli6" @handshake_shli_0(lhs: %extsi17.outs: !handshake.channel<i6>, rhs: %extui0.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i6>)
    %extsi22.outs = hw.instance "extsi22" @handshake_extsi_5(ins: %shli6.result: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %shli5.result = hw.instance "shli5" @handshake_shli_1(lhs: %extsi16.outs: !handshake.channel<i7>, rhs: %extui1.outs: !handshake.channel<i7>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i7>)
    %addi5.result = hw.instance "addi5" @handshake_addi_0(lhs: %extsi22.outs: !handshake.channel<i7>, rhs: %shli5.result: !handshake.channel<i7>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i7>)
    %addi0.result = hw.instance "addi0" @handshake_addi_0(lhs: %extsi18.outs: !handshake.channel<i7>, rhs: %addi5.result: !handshake.channel<i7>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i7>)
    %load1.addrOut, %load1.dataOut = hw.instance "load1" @handshake_load_1(addrIn: %addi0.result: !handshake.channel<i7>, dataFromMem: %mem_controller3.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i7>, dataOut: !handshake.channel<i32>)
    %load2.addrOut, %load2.dataOut = hw.instance "load2" @handshake_load_0(addrIn: %trunci3.outs: !handshake.channel<i4>, dataFromMem: %mem_controller2.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %mulf0.result = hw.instance "mulf0" @handshake_mulf_0(lhs: %load1.dataOut: !handshake.channel<i32>, rhs: %load2.dataOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    %buffer58.outs = hw.instance "buffer58" @handshake_buffer_8(ins: %mux17.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer59.outs = hw.instance "buffer59" @handshake_buffer_9(ins: %buffer58.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %addf0.result = hw.instance "addf0" @handshake_addf_0(lhs: %buffer59.outs: !handshake.channel<i32>, rhs: %mulf0.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    %addi2.result = hw.instance "addi2" @handshake_addi_1(lhs: %extsi19.outs: !handshake.channel<i6>, rhs: %extsi21.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i6>)
    %fork11.outs_0, %fork11.outs_1 = hw.instance "fork11" @handshake_fork_9(ins: %addi2.result: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i6>, outs_1: !handshake.channel<i6>)
    %trunci4.outs = hw.instance "trunci4" @handshake_trunci_1(ins: %fork11.outs_0: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer68.outs = hw.instance "buffer68" @handshake_buffer_10(ins: %fork11.outs_1: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %cmpi0.result = hw.instance "cmpi0" @handshake_cmpi_0(lhs: %buffer68.outs: !handshake.channel<i6>, rhs: %extsi20.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i1>)
    %fork12.outs_0, %fork12.outs_1, %fork12.outs_2, %fork12.outs_3, %fork12.outs_4, %fork12.outs_5 = hw.instance "fork12" @handshake_fork_10(ins: %cmpi0.result: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>, outs_4: !handshake.channel<i1>, outs_5: !handshake.channel<i1>)
    %buffer83.outs = hw.instance "buffer83" @handshake_buffer_3(ins: %lazy_fork1.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %cond_br7.trueOut, %cond_br7.falseOut = hw.instance "cond_br7" @handshake_cond_br_3(condition: %fork20.outs_5: !handshake.channel<i1>, data: %buffer83.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    %constant17.outs = hw.instance "constant17" @handshake_constant_0(ctrl: %fork0.outs_5: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %buffer15.outs = hw.instance "buffer15" @handshake_buffer_2(ins: %mux4.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer16.outs = hw.instance "buffer16" @handshake_buffer_3(ins: %buffer15.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %mux5.outs = hw.instance "mux5" @handshake_mux_0(index: %fork13.outs_4: !handshake.channel<i1>, ins_0: %buffer16.outs: !handshake.control<>, ins_1: %cond_br7.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %merge5.outs = hw.instance "merge5" @handshake_merge_0(ins_0: %constant17.outs: !handshake.channel<i1>, ins_1: %fork20.outs_4: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %buffer77.outs = hw.instance "buffer77" @handshake_buffer_1(ins: %merge5.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %fork13.outs_0, %fork13.outs_1, %fork13.outs_2, %fork13.outs_3, %fork13.outs_4 = hw.instance "fork13" @handshake_fork_11(ins: %buffer77.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>, outs_4: !handshake.channel<i1>)
    %buffer75.outs = hw.instance "buffer75" @handshake_buffer_2(ins: %mux5.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer76.outs = hw.instance "buffer76" @handshake_buffer_3(ins: %buffer75.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %lazy_fork1.outs_0, %lazy_fork1.outs_1 = hw.instance "lazy_fork1" @handshake_lazy_fork_0(ins: %buffer76.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>)
    %cond_br40.trueOut, %cond_br40.falseOut = hw.instance "cond_br40" @handshake_cond_br_2(condition: %fork20.outs_0: !handshake.channel<i1>, data: %trunci8.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i5>, falseOut: !handshake.channel<i5>)
    hw.instance "sink4" @handshake_sink_1(ins: %cond_br40.falseOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> ()
    %cond_br41.trueOut, %cond_br41.falseOut = hw.instance "cond_br41" @handshake_cond_br_3(condition: %fork20.outs_3: !handshake.channel<i1>, data: %fork16.outs_3: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    hw.instance "sink5" @handshake_sink_2(ins: %cond_br41.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> ()
    %cond_br42.trueOut, %cond_br42.falseOut = hw.instance "cond_br42" @handshake_cond_br_2(condition: %fork20.outs_1: !handshake.channel<i1>, data: %fork15.outs_2: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i5>, falseOut: !handshake.channel<i5>)
    hw.instance "sink6" @handshake_sink_1(ins: %cond_br42.falseOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> ()
    %cond_br43.trueOut, %cond_br43.falseOut = hw.instance "cond_br43" @handshake_cond_br_1(condition: %fork20.outs_2: !handshake.channel<i1>, data: %fork14.outs_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    hw.instance "sink7" @handshake_sink_3(ins: %cond_br43.falseOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> ()
    %buffer40.outs = hw.instance "buffer40" @handshake_buffer_11(ins: %fork5.outs_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %mux19.outs = hw.instance "mux19" @handshake_mux_2(index: %fork13.outs_3: !handshake.channel<i1>, ins_0: %buffer40.outs: !handshake.channel<i32>, ins_1: %cond_br43.trueOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer84.outs = hw.instance "buffer84" @handshake_buffer_8(ins: %mux19.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer85.outs = hw.instance "buffer85" @handshake_buffer_9(ins: %buffer84.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %fork14.outs_0, %fork14.outs_1 = hw.instance "fork14" @handshake_fork_5(ins: %buffer85.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>)
    %buffer37.outs = hw.instance "buffer37" @handshake_buffer_6(ins: %fork4.outs_3: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %mux20.outs = hw.instance "mux20" @handshake_mux_1(index: %fork13.outs_0: !handshake.channel<i1>, ins_0: %buffer37.outs: !handshake.channel<i5>, ins_1: %cond_br42.trueOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer88.outs = hw.instance "buffer88" @handshake_buffer_4(ins: %mux20.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer89.outs = hw.instance "buffer89" @handshake_buffer_5(ins: %buffer88.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %fork15.outs_0, %fork15.outs_1, %fork15.outs_2 = hw.instance "fork15" @handshake_fork_6(ins: %buffer89.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i5>, outs_1: !handshake.channel<i5>, outs_2: !handshake.channel<i5>)
    %trunci5.outs = hw.instance "trunci5" @handshake_trunci_0(ins: %fork15.outs_0: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %extsi23.outs = hw.instance "extsi23" @handshake_extsi_2(ins: %trunci5.outs: !handshake.channel<i4>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %extsi24.outs = hw.instance "extsi24" @handshake_extsi_1(ins: %fork15.outs_1: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %buffer30.outs = hw.instance "buffer30" @handshake_buffer_7(ins: %fork3.outs_4: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %mux23.outs = hw.instance "mux23" @handshake_mux_0(index: %fork13.outs_2: !handshake.channel<i1>, ins_0: %buffer30.outs: !handshake.control<>, ins_1: %cond_br41.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer93.outs = hw.instance "buffer93" @handshake_buffer_2(ins: %mux23.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer94.outs = hw.instance "buffer94" @handshake_buffer_3(ins: %buffer93.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %fork16.outs_0, %fork16.outs_1, %fork16.outs_2, %fork16.outs_3 = hw.instance "fork16" @handshake_fork_12(ins: %buffer94.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>, outs_2: !handshake.control<>, outs_3: !handshake.control<>)
    %mux25.outs = hw.instance "mux25" @handshake_mux_1(index: %fork13.outs_1: !handshake.channel<i1>, ins_0: %extsi12.outs: !handshake.channel<i5>, ins_1: %cond_br40.trueOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer99.outs = hw.instance "buffer99" @handshake_buffer_4(ins: %mux25.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %buffer100.outs = hw.instance "buffer100" @handshake_buffer_5(ins: %buffer99.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %fork17.outs_0, %fork17.outs_1, %fork17.outs_2, %fork17.outs_3 = hw.instance "fork17" @handshake_fork_13(ins: %buffer100.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i5>, outs_1: !handshake.channel<i5>, outs_2: !handshake.channel<i5>, outs_3: !handshake.channel<i5>)
    %extsi25.outs = hw.instance "extsi25" @handshake_extsi_3(ins: %fork17.outs_0: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %extsi26.outs = hw.instance "extsi26" @handshake_extsi_1(ins: %fork17.outs_3: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %buffer102.outs = hw.instance "buffer102" @handshake_buffer_6(ins: %fork17.outs_1: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %trunci6.outs = hw.instance "trunci6" @handshake_trunci_0(ins: %buffer102.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %trunci7.outs = hw.instance "trunci7" @handshake_trunci_0(ins: %fork17.outs_2: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %constant19.outs = hw.instance "constant19" @handshake_constant_1(ctrl: %fork16.outs_2: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %extsi27.outs = hw.instance "extsi27" @handshake_extsi_1(ins: %constant19.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %constant20.outs = hw.instance "constant20" @handshake_constant_2(ctrl: %fork16.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i2>)
    %fork18.outs_0, %fork18.outs_1 = hw.instance "fork18" @handshake_fork_8(ins: %constant20.outs: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i2>, outs_1: !handshake.channel<i2>)
    %extui2.outs = hw.instance "extui2" @handshake_extui_0(ins: %fork18.outs_0: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %extsi28.outs = hw.instance "extsi28" @handshake_extsi_4(ins: %fork18.outs_1: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %constant21.outs = hw.instance "constant21" @handshake_constant_3(ctrl: %fork16.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i3>)
    %extui3.outs = hw.instance "extui3" @handshake_extui_1(ins: %constant21.outs: !handshake.channel<i3>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %load3.addrOut, %load3.dataOut = hw.instance "load3" @handshake_load_0(addrIn: %trunci7.outs: !handshake.channel<i4>, dataFromMem: %lsq3.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %shli7.result = hw.instance "shli7" @handshake_shli_0(lhs: %extsi24.outs: !handshake.channel<i6>, rhs: %extui2.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i6>)
    %extsi29.outs = hw.instance "extsi29" @handshake_extsi_5(ins: %shli7.result: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i7>)
    %shli4.result = hw.instance "shli4" @handshake_shli_1(lhs: %extsi23.outs: !handshake.channel<i7>, rhs: %extui3.outs: !handshake.channel<i7>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i7>)
    %addi6.result = hw.instance "addi6" @handshake_addi_0(lhs: %extsi29.outs: !handshake.channel<i7>, rhs: %shli4.result: !handshake.channel<i7>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i7>)
    %addi1.result = hw.instance "addi1" @handshake_addi_0(lhs: %extsi25.outs: !handshake.channel<i7>, rhs: %addi6.result: !handshake.channel<i7>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i7>)
    %load4.addrOut, %load4.dataOut = hw.instance "load4" @handshake_load_1(addrIn: %addi1.result: !handshake.channel<i7>, dataFromMem: %mem_controller3.ldData_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i7>, dataOut: !handshake.channel<i32>)
    %mulf1.result = hw.instance "mulf1" @handshake_mulf_0(lhs: %load4.dataOut: !handshake.channel<i32>, rhs: %fork14.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    %addf1.result = hw.instance "addf1" @handshake_addf_0(lhs: %load3.dataOut: !handshake.channel<i32>, rhs: %mulf1.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    %store0.addrOut, %store0.dataToMem = hw.instance "store0" @handshake_store_0(addrIn: %trunci6.outs: !handshake.channel<i4>, dataIn: %addf1.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataToMem: !handshake.channel<i32>)
    %addi3.result = hw.instance "addi3" @handshake_addi_1(lhs: %extsi26.outs: !handshake.channel<i6>, rhs: %extsi28.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i6>)
    %fork19.outs_0, %fork19.outs_1 = hw.instance "fork19" @handshake_fork_9(ins: %addi3.result: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i6>, outs_1: !handshake.channel<i6>)
    %trunci8.outs = hw.instance "trunci8" @handshake_trunci_1(ins: %fork19.outs_0: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %cmpi1.result = hw.instance "cmpi1" @handshake_cmpi_0(lhs: %fork19.outs_1: !handshake.channel<i6>, rhs: %extsi27.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i1>)
    %fork20.outs_0, %fork20.outs_1, %fork20.outs_2, %fork20.outs_3, %fork20.outs_4, %fork20.outs_5 = hw.instance "fork20" @handshake_fork_10(ins: %cmpi1.result: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>, outs_4: !handshake.channel<i1>, outs_5: !handshake.channel<i1>)
    %buffer121.outs = hw.instance "buffer121" @handshake_buffer_0(ins: %fork22.outs_3: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %cond_br8.trueOut, %cond_br8.falseOut = hw.instance "cond_br8" @handshake_cond_br_3(condition: %buffer121.outs: !handshake.channel<i1>, data: %cond_br7.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    hw.instance "sink8" @handshake_sink_2(ins: %cond_br8.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> ()
    %buffer115.outs = hw.instance "buffer115" @handshake_buffer_2(ins: %lazy_fork2.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %cond_br9.trueOut, %cond_br9.falseOut = hw.instance "cond_br9" @handshake_cond_br_3(condition: %fork22.outs_2: !handshake.channel<i1>, data: %buffer115.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    %buffer22.outs = hw.instance "buffer22" @handshake_buffer_2(ins: %lazy_fork0.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer23.outs = hw.instance "buffer23" @handshake_buffer_3(ins: %buffer22.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %lazy_fork2.outs_0, %lazy_fork2.outs_1 = hw.instance "lazy_fork2" @handshake_lazy_fork_0(ins: %buffer23.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>)
    %cond_br44.trueOut, %cond_br44.falseOut = hw.instance "cond_br44" @handshake_cond_br_2(condition: %fork22.outs_0: !handshake.channel<i1>, data: %trunci9.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i5>, falseOut: !handshake.channel<i5>)
    hw.instance "sink9" @handshake_sink_1(ins: %cond_br44.falseOut: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> ()
    %cond_br45.trueOut, %cond_br45.falseOut = hw.instance "cond_br45" @handshake_cond_br_3(condition: %fork22.outs_1: !handshake.channel<i1>, data: %fork3.outs_3: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    hw.instance "sink10" @handshake_sink_2(ins: %cond_br45.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> ()
    %constant22.outs = hw.instance "constant22" @handshake_constant_1(ctrl: %fork3.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %extsi30.outs = hw.instance "extsi30" @handshake_extsi_1(ins: %constant22.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %constant24.outs = hw.instance "constant24" @handshake_constant_2(ctrl: %fork3.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i2>)
    %extsi31.outs = hw.instance "extsi31" @handshake_extsi_4(ins: %constant24.outs: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i6>)
    %store1.addrOut, %store1.dataToMem = hw.instance "store1" @handshake_store_0(addrIn: %trunci0.outs: !handshake.channel<i4>, dataIn: %fork5.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataToMem: !handshake.channel<i32>)
    %addi4.result = hw.instance "addi4" @handshake_addi_1(lhs: %extsi14.outs: !handshake.channel<i6>, rhs: %extsi31.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i6>)
    %fork21.outs_0, %fork21.outs_1 = hw.instance "fork21" @handshake_fork_9(ins: %addi4.result: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i6>, outs_1: !handshake.channel<i6>)
    %trunci9.outs = hw.instance "trunci9" @handshake_trunci_1(ins: %fork21.outs_0: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %cmpi2.result = hw.instance "cmpi2" @handshake_cmpi_0(lhs: %fork21.outs_1: !handshake.channel<i6>, rhs: %extsi30.outs: !handshake.channel<i6>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i1>)
    %fork22.outs_0, %fork22.outs_1, %fork22.outs_2, %fork22.outs_3, %fork22.outs_4 = hw.instance "fork22" @handshake_fork_11(ins: %cmpi2.result: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>, outs_4: !handshake.channel<i1>)
    %lazy_fork3.outs_0, %lazy_fork3.outs_1 = hw.instance "lazy_fork3" @handshake_lazy_fork_0(ins: %cond_br9.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>)
    %fork23.outs_0, %fork23.outs_1 = hw.instance "fork23" @handshake_fork_14(ins: %lazy_fork3.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>)
    hw.instance "sink11" @handshake_sink_2(ins: %lazy_fork3.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> ()
    %constant25.outs = hw.instance "constant25" @handshake_constant_4(ctrl: %fork0.outs_3: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i5>)
    %trunci10.outs = hw.instance "trunci10" @handshake_trunci_0(ins: %constant25.outs: !handshake.channel<i5>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %load5.addrOut, %load5.dataOut = hw.instance "load5" @handshake_load_0(addrIn: %trunci10.outs: !handshake.channel<i4>, dataFromMem: %lsq2.ldData_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %fptosi0.outs = hw.instance "fptosi0" @handshake_fptosi_0(ins: %load5.dataOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    hw.output %fptosi0.outs, %mem_controller3.memEnd, %mem_controller2.memEnd, %lsq3.memEnd, %lsq2.memEnd, %fork0.outs_4, %mem_controller3.loadEn, %mem_controller3.loadAddr, %mem_controller3.storeEn, %mem_controller3.storeAddr, %mem_controller3.storeData, %mem_controller2.loadEn, %mem_controller2.loadAddr, %mem_controller2.storeEn, %mem_controller2.storeAddr, %mem_controller2.storeData, %lsq3.loadEn, %lsq3.loadAddr, %lsq3.storeEn, %lsq3.storeAddr, %lsq3.storeData, %lsq2.loadEn, %lsq2.loadAddr, %lsq2.storeEn, %lsq2.storeAddr, %lsq2.storeData : !handshake.channel<i32>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, i1, i7, i1, i7, i32, i1, i4, i1, i4, i32, i1, i4, i1, i4, i32, i1, i4, i1, i4, i32
  }
  hw.module.extern @handshake_fork_0(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>, out outs_2 : !handshake.control<>, out outs_3 : !handshake.control<>, out outs_4 : !handshake.control<>, out outs_5 : !handshake.control<>, out outs_6 : !handshake.control<>, out outs_7 : !handshake.control<>, out outs_8 : !handshake.control<>, out outs_9 : !handshake.control<>, out outs_10 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 11 : ui32}}
  hw.module.extern @handshake_lsq_lsq2(in %loadData : i32, in %memStart : !handshake.control<>, in %ctrl_0 : !handshake.control<>, in %ldAddr_0 : !handshake.channel<i4>, in %ctrl_1 : !handshake.control<>, in %stAddr_0 : !handshake.channel<i4>, in %stData_0 : !handshake.channel<i32>, in %ctrl_2 : !handshake.control<>, in %ldAddr_1 : !handshake.channel<i4>, in %ctrlEnd : !handshake.control<>, in %clk : i1, in %rst : i1, out ldData_0 : !handshake.channel<i32>, out ldData_1 : !handshake.channel<i32>, out memEnd : !handshake.control<>, out loadEn : i1, out loadAddr : i4, out storeEn : i1, out storeAddr : i4, out storeData : i32) attributes {hw.name = "handshake.lsq", hw.parameters = {addrWidth = 4 : ui32, bufferDepth = 0 : ui32, dataWidth = 32 : ui32, fifoDepth = 16 : ui32, fifoDepth_L = 16 : ui32, fifoDepth_S = 16 : ui32, groupMulti = 0 : ui32, headLagEn = 0 : ui32, indexWidth = 4 : ui32, ldOrder = [[0 : i32], [0 : i32], [0 : i32]], ldPortIdx = [[0 : i32], [0 : i32], [1 : i32]], loadOffsets = [[0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]], loadPorts = [[0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [1 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]], master = true, name = "handshake_lsq_lsq2", numBBs = 3 : ui32, numLdChannels = 1 : ui32, numLoadPorts = 2 : ui32, numLoads = [1 : i32, 0 : i32, 1 : i32], numStChannels = 1 : ui32, numStorePorts = 1 : ui32, numStores = [0 : i32, 1 : i32, 0 : i32], pipe0En = 0 : ui32, pipe1En = 0 : ui32, pipeCompEn = 0 : ui32, stPortIdx = [[0 : i32], [0 : i32], [0 : i32]], stResp = 0 : ui32, storeOffsets = [[0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]], storePorts = [[0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32], [0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]]}}
  hw.module.extern @handshake_lsq_lsq3(in %loadData : i32, in %memStart : !handshake.control<>, in %ctrl_0 : !handshake.control<>, in %ldAddr_0 : !handshake.channel<i4>, in %stAddr_0 : !handshake.channel<i4>, in %stData_0 : !handshake.channel<i32>, in %ctrlEnd : !handshake.control<>, in %clk : i1, in %rst : i1, out ldData_0 : !handshake.channel<i32>, out memEnd : !handshake.control<>, out loadEn : i1, out loadAddr : i4, out storeEn : i1, out storeAddr : i4, out storeData : i32) attributes {hw.name = "handshake.lsq", hw.parameters = {addrWidth = 4 : ui32, bufferDepth = 0 : ui32, dataWidth = 32 : ui32, fifoDepth = 16 : ui32, fifoDepth_L = 16 : ui32, fifoDepth_S = 16 : ui32, groupMulti = 0 : ui32, headLagEn = 0 : ui32, indexWidth = 4 : ui32, ldOrder = [[0 : i32]], ldPortIdx = [[0 : i32]], loadOffsets = [[0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]], loadPorts = [[0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]], master = true, name = "handshake_lsq_lsq3", numBBs = 1 : ui32, numLdChannels = 1 : ui32, numLoadPorts = 1 : ui32, numLoads = [1 : i32], numStChannels = 1 : ui32, numStorePorts = 1 : ui32, numStores = [1 : i32], pipe0En = 0 : ui32, pipe1En = 0 : ui32, pipeCompEn = 0 : ui32, stPortIdx = [[0 : i32]], stResp = 0 : ui32, storeOffsets = [[1 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]], storePorts = [[0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32, 0 : i32]]}}
  hw.module.extern @handshake_mem_controller_0(in %loadData : i32, in %memStart : !handshake.control<>, in %ldAddr_0 : !handshake.channel<i4>, in %ctrlEnd : !handshake.control<>, in %clk : i1, in %rst : i1, out ldData_0 : !handshake.channel<i32>, out memEnd : !handshake.control<>, out loadEn : i1, out loadAddr : i4, out storeEn : i1, out storeAddr : i4, out storeData : i32) attributes {hw.name = "handshake.mem_controller", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<i32>, NUM_CONTROLS = 0 : ui32, NUM_LOADS = 1 : ui32, NUM_STORES = 0 : ui32}}
  hw.module.extern @handshake_mem_controller_1(in %loadData : i32, in %memStart : !handshake.control<>, in %ldAddr_0 : !handshake.channel<i7>, in %ldAddr_1 : !handshake.channel<i7>, in %ctrlEnd : !handshake.control<>, in %clk : i1, in %rst : i1, out ldData_0 : !handshake.channel<i32>, out ldData_1 : !handshake.channel<i32>, out memEnd : !handshake.control<>, out loadEn : i1, out loadAddr : i7, out storeEn : i1, out storeAddr : i7, out storeData : i32) attributes {hw.name = "handshake.mem_controller", hw.parameters = {ADDR_TYPE = !handshake.channel<i7>, DATA_TYPE = !handshake.channel<i32>, NUM_CONTROLS = 0 : ui32, NUM_LOADS = 2 : ui32, NUM_STORES = 0 : ui32}}
  hw.module.extern @handshake_mux_0(in %index : !handshake.channel<i1>, in %ins_0 : !handshake.control<>, in %ins_1 : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.mux", hw.parameters = {DATA_TYPE = !handshake.control<>, SELECT_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_constant_0(in %ctrl : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.constant", hw.parameters = {DATA_WIDTH = 1 : ui32, VALUE = "0"}}
  hw.module.extern @handshake_fork_1(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i1>, out outs_1 : !handshake.channel<i1>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_extsi_0(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i1>, OUTPUT_TYPE = !handshake.channel<i5>}}
  hw.module.extern @handshake_buffer_0(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_merge_0(in %ins_0 : !handshake.channel<i1>, in %ins_1 : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.merge", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_buffer_1(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_fork_2(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i1>, out outs_1 : !handshake.channel<i1>, out outs_2 : !handshake.channel<i1>, out outs_3 : !handshake.channel<i1>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 4 : ui32}}
  hw.module.extern @handshake_buffer_2(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.control<>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}}
  hw.module.extern @handshake_buffer_3(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.control<>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_lazy_fork_0(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>) attributes {hw.name = "handshake.lazy_fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_fork_3(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>, out outs_2 : !handshake.control<>, out outs_3 : !handshake.control<>, out outs_4 : !handshake.control<>, out outs_5 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 6 : ui32}}
  hw.module.extern @handshake_mux_1(in %index : !handshake.channel<i1>, in %ins_0 : !handshake.channel<i5>, in %ins_1 : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.mux", hw.parameters = {DATA_TYPE = !handshake.channel<i5>, SELECT_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_buffer_4(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i5>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}}
  hw.module.extern @handshake_buffer_5(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i5>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_fork_4(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i5>, out outs_1 : !handshake.channel<i5>, out outs_2 : !handshake.channel<i5>, out outs_3 : !handshake.channel<i5>, out outs_4 : !handshake.channel<i5>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i5>, SIZE = 5 : ui32}}
  hw.module.extern @handshake_extsi_1(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i6>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i5>, OUTPUT_TYPE = !handshake.channel<i6>}}
  hw.module.extern @handshake_buffer_6(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i5>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_trunci_0(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i4>) attributes {hw.name = "handshake.trunci", hw.parameters = {INPUT_TYPE = !handshake.channel<i5>, OUTPUT_TYPE = !handshake.channel<i4>}}
  hw.module.extern @handshake_load_0(in %addrIn : !handshake.channel<i4>, in %dataFromMem : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out addrOut : !handshake.channel<i4>, out dataOut : !handshake.channel<i32>) attributes {hw.name = "handshake.load", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @handshake_cond_br_0(in %condition : !handshake.channel<i1>, in %data : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out trueOut : !handshake.channel<i1>, out falseOut : !handshake.channel<i1>) attributes {hw.name = "handshake.cond_br", hw.parameters = {DATA_TYPE = !handshake.channel<i1>}}
  hw.module.extern @handshake_sink_0(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1) attributes {hw.name = "handshake.sink", hw.parameters = {DATA_TYPE = !handshake.channel<i1>}}
  hw.module.extern @handshake_cond_br_1(in %condition : !handshake.channel<i1>, in %data : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out trueOut : !handshake.channel<i32>, out falseOut : !handshake.channel<i32>) attributes {hw.name = "handshake.cond_br", hw.parameters = {DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @handshake_fork_5(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i32>, out outs_1 : !handshake.channel<i32>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<f32>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_cond_br_2(in %condition : !handshake.channel<i1>, in %data : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out trueOut : !handshake.channel<i5>, out falseOut : !handshake.channel<i5>) attributes {hw.name = "handshake.cond_br", hw.parameters = {DATA_TYPE = !handshake.channel<i5>}}
  hw.module.extern @handshake_sink_1(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1) attributes {hw.name = "handshake.sink", hw.parameters = {DATA_TYPE = !handshake.channel<i5>}}
  hw.module.extern @handshake_cond_br_3(in %condition : !handshake.channel<i1>, in %data : !handshake.control<>, in %clk : i1, in %rst : i1, out trueOut : !handshake.control<>, out falseOut : !handshake.control<>) attributes {hw.name = "handshake.cond_br", hw.parameters = {DATA_TYPE = !handshake.control<>}}
  hw.module.extern @handshake_sink_2(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1) attributes {hw.name = "handshake.sink", hw.parameters = {DATA_TYPE = !handshake.control<>}}
  hw.module.extern @handshake_fork_6(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i5>, out outs_1 : !handshake.channel<i5>, out outs_2 : !handshake.channel<i5>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i5>, SIZE = 3 : ui32}}
  hw.module.extern @handshake_extsi_2(in %ins : !handshake.channel<i4>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i7>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i4>, OUTPUT_TYPE = !handshake.channel<i7>}}
  hw.module.extern @handshake_fork_7(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>, out outs_2 : !handshake.control<>, out outs_3 : !handshake.control<>, out outs_4 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 5 : ui32}}
  hw.module.extern @handshake_mux_2(in %index : !handshake.channel<i1>, in %ins_0 : !handshake.channel<i32>, in %ins_1 : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.mux", hw.parameters = {DATA_TYPE = !handshake.channel<f32>, SELECT_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_extsi_3(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i7>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i5>, OUTPUT_TYPE = !handshake.channel<i7>}}
  hw.module.extern @handshake_buffer_7(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.control<>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_constant_1(in %ctrl : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.constant", hw.parameters = {DATA_WIDTH = 5 : ui32, VALUE = "01010"}}
  hw.module.extern @handshake_constant_2(in %ctrl : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i2>) attributes {hw.name = "handshake.constant", hw.parameters = {DATA_WIDTH = 2 : ui32, VALUE = "01"}}
  hw.module.extern @handshake_fork_8(in %ins : !handshake.channel<i2>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i2>, out outs_1 : !handshake.channel<i2>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i2>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_extui_0(in %ins : !handshake.channel<i2>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i6>) attributes {hw.name = "handshake.extui", hw.parameters = {INPUT_TYPE = !handshake.channel<i2>, OUTPUT_TYPE = !handshake.channel<i6>}}
  hw.module.extern @handshake_extsi_4(in %ins : !handshake.channel<i2>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i6>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i2>, OUTPUT_TYPE = !handshake.channel<i6>}}
  hw.module.extern @handshake_constant_3(in %ctrl : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i3>) attributes {hw.name = "handshake.constant", hw.parameters = {DATA_WIDTH = 3 : ui32, VALUE = "011"}}
  hw.module.extern @handshake_extui_1(in %ins : !handshake.channel<i3>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i7>) attributes {hw.name = "handshake.extui", hw.parameters = {INPUT_TYPE = !handshake.channel<i3>, OUTPUT_TYPE = !handshake.channel<i7>}}
  hw.module.extern @handshake_shli_0(in %lhs : !handshake.channel<i6>, in %rhs : !handshake.channel<i6>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i6>) attributes {hw.name = "handshake.shli", hw.parameters = {DATA_TYPE = !handshake.channel<i6>}}
  hw.module.extern @handshake_extsi_5(in %ins : !handshake.channel<i6>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i7>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i6>, OUTPUT_TYPE = !handshake.channel<i7>}}
  hw.module.extern @handshake_shli_1(in %lhs : !handshake.channel<i7>, in %rhs : !handshake.channel<i7>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i7>) attributes {hw.name = "handshake.shli", hw.parameters = {DATA_TYPE = !handshake.channel<i7>}}
  hw.module.extern @handshake_addi_0(in %lhs : !handshake.channel<i7>, in %rhs : !handshake.channel<i7>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i7>) attributes {hw.name = "handshake.addi", hw.parameters = {DATA_TYPE = !handshake.channel<i7>}}
  hw.module.extern @handshake_load_1(in %addrIn : !handshake.channel<i7>, in %dataFromMem : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out addrOut : !handshake.channel<i7>, out dataOut : !handshake.channel<i32>) attributes {hw.name = "handshake.load", hw.parameters = {ADDR_TYPE = !handshake.channel<i7>, DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @handshake_mulf_0(in %lhs : !handshake.channel<i32>, in %rhs : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i32>) attributes {hw.name = "handshake.mulf", hw.parameters = {DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @handshake_buffer_8(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<f32>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}}
  hw.module.extern @handshake_buffer_9(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<f32>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_addf_0(in %lhs : !handshake.channel<i32>, in %rhs : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i32>) attributes {hw.name = "handshake.addf", hw.parameters = {DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @handshake_addi_1(in %lhs : !handshake.channel<i6>, in %rhs : !handshake.channel<i6>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i6>) attributes {hw.name = "handshake.addi", hw.parameters = {DATA_TYPE = !handshake.channel<i6>}}
  hw.module.extern @handshake_fork_9(in %ins : !handshake.channel<i6>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i6>, out outs_1 : !handshake.channel<i6>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i6>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_trunci_1(in %ins : !handshake.channel<i6>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.trunci", hw.parameters = {INPUT_TYPE = !handshake.channel<i6>, OUTPUT_TYPE = !handshake.channel<i5>}}
  hw.module.extern @handshake_buffer_10(in %ins : !handshake.channel<i6>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i6>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i6>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_cmpi_0(in %lhs : !handshake.channel<i6>, in %rhs : !handshake.channel<i6>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i1>) attributes {hw.name = "handshake.cmpi", hw.parameters = {DATA_TYPE = !handshake.channel<i6>, PREDICATE = "ult"}}
  hw.module.extern @handshake_fork_10(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i1>, out outs_1 : !handshake.channel<i1>, out outs_2 : !handshake.channel<i1>, out outs_3 : !handshake.channel<i1>, out outs_4 : !handshake.channel<i1>, out outs_5 : !handshake.channel<i1>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 6 : ui32}}
  hw.module.extern @handshake_fork_11(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i1>, out outs_1 : !handshake.channel<i1>, out outs_2 : !handshake.channel<i1>, out outs_3 : !handshake.channel<i1>, out outs_4 : !handshake.channel<i1>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 5 : ui32}}
  hw.module.extern @handshake_sink_3(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1) attributes {hw.name = "handshake.sink", hw.parameters = {DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @handshake_buffer_11(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<f32>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_fork_12(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>, out outs_2 : !handshake.control<>, out outs_3 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 4 : ui32}}
  hw.module.extern @handshake_fork_13(in %ins : !handshake.channel<i5>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i5>, out outs_1 : !handshake.channel<i5>, out outs_2 : !handshake.channel<i5>, out outs_3 : !handshake.channel<i5>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i5>, SIZE = 4 : ui32}}
  hw.module.extern @handshake_store_0(in %addrIn : !handshake.channel<i4>, in %dataIn : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out addrOut : !handshake.channel<i4>, out dataToMem : !handshake.channel<i32>) attributes {hw.name = "handshake.store", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @handshake_fork_14(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_constant_4(in %ctrl : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i5>) attributes {hw.name = "handshake.constant", hw.parameters = {DATA_WIDTH = 5 : ui32, VALUE = "01001"}}
  hw.module.extern @handshake_fptosi_0(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.fptosi", hw.parameters = {DATA_TYPE = !handshake.channel<f32>}}
  hw.module.extern @mem_to_bram_32_7(in %loadEn : i1, in %loadAddr : i7, in %storeEn : i1, in %storeAddr : i7, in %storeData : i32, in %din0 : i32, in %din1 : i32, out ce0 : i1, out we0 : i1, out address0 : i7, out dout0 : i32, out ce1 : i1, out we1 : i1, out address1 : i7, out dout1 : i32, out loadData : i32) attributes {hw.name = "mem_to_bram", hw.parameters = {ADDR_WIDTH = 7 : ui32, DATA_WIDTH = 32 : ui32}}
  hw.module.extern @mem_to_bram_32_4(in %loadEn : i1, in %loadAddr : i4, in %storeEn : i1, in %storeAddr : i4, in %storeData : i32, in %din0 : i32, in %din1 : i32, out ce0 : i1, out we0 : i1, out address0 : i4, out dout0 : i32, out ce1 : i1, out we1 : i1, out address1 : i4, out dout1 : i32, out loadData : i32) attributes {hw.name = "mem_to_bram", hw.parameters = {ADDR_WIDTH = 4 : ui32, DATA_WIDTH = 32 : ui32}}
  hw.module @atax_float_wrapper(in %A_din0 : i32, in %A_din1 : i32, in %x_din0 : i32, in %x_din1 : i32, in %y_din0 : i32, in %y_din1 : i32, in %tmp_din0 : i32, in %tmp_din1 : i32, in %A_start : !handshake.control<>, in %x_start : !handshake.control<>, in %y_start : !handshake.control<>, in %tmp_start : !handshake.control<>, in %start : !handshake.control<>, in %clk : i1, in %rst : i1, out out0 : !handshake.channel<i32>, out A_end : !handshake.control<>, out x_end : !handshake.control<>, out y_end : !handshake.control<>, out tmp_end : !handshake.control<>, out end : !handshake.control<>, out A_ce0 : i1, out A_we0 : i1, out A_address0 : i7, out A_dout0 : i32, out A_ce1 : i1, out A_we1 : i1, out A_address1 : i7, out A_dout1 : i32, out x_ce0 : i1, out x_we0 : i1, out x_address0 : i4, out x_dout0 : i32, out x_ce1 : i1, out x_we1 : i1, out x_address1 : i4, out x_dout1 : i32, out y_ce0 : i1, out y_we0 : i1, out y_address0 : i4, out y_dout0 : i32, out y_ce1 : i1, out y_we1 : i1, out y_address1 : i4, out y_dout1 : i32, out tmp_ce0 : i1, out tmp_we0 : i1, out tmp_address0 : i4, out tmp_dout0 : i32, out tmp_ce1 : i1, out tmp_we1 : i1, out tmp_address1 : i4, out tmp_dout1 : i32) {
    %mem_to_bram_converter_x.ce0, %mem_to_bram_converter_x.we0, %mem_to_bram_converter_x.address0, %mem_to_bram_converter_x.dout0, %mem_to_bram_converter_x.ce1, %mem_to_bram_converter_x.we1, %mem_to_bram_converter_x.address1, %mem_to_bram_converter_x.dout1, %mem_to_bram_converter_x.loadData = hw.instance "mem_to_bram_converter_x" @mem_to_bram_32_4(loadEn: %atax_float_wrapped.x_loadEn: i1, loadAddr: %atax_float_wrapped.x_loadAddr: i4, storeEn: %atax_float_wrapped.x_storeEn: i1, storeAddr: %atax_float_wrapped.x_storeAddr: i4, storeData: %atax_float_wrapped.x_storeData: i32, din0: %x_din0: i32, din1: %x_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %mem_to_bram_converter_tmp.ce0, %mem_to_bram_converter_tmp.we0, %mem_to_bram_converter_tmp.address0, %mem_to_bram_converter_tmp.dout0, %mem_to_bram_converter_tmp.ce1, %mem_to_bram_converter_tmp.we1, %mem_to_bram_converter_tmp.address1, %mem_to_bram_converter_tmp.dout1, %mem_to_bram_converter_tmp.loadData = hw.instance "mem_to_bram_converter_tmp" @mem_to_bram_32_4(loadEn: %atax_float_wrapped.tmp_loadEn: i1, loadAddr: %atax_float_wrapped.tmp_loadAddr: i4, storeEn: %atax_float_wrapped.tmp_storeEn: i1, storeAddr: %atax_float_wrapped.tmp_storeAddr: i4, storeData: %atax_float_wrapped.tmp_storeData: i32, din0: %tmp_din0: i32, din1: %tmp_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %mem_to_bram_converter_y.ce0, %mem_to_bram_converter_y.we0, %mem_to_bram_converter_y.address0, %mem_to_bram_converter_y.dout0, %mem_to_bram_converter_y.ce1, %mem_to_bram_converter_y.we1, %mem_to_bram_converter_y.address1, %mem_to_bram_converter_y.dout1, %mem_to_bram_converter_y.loadData = hw.instance "mem_to_bram_converter_y" @mem_to_bram_32_4(loadEn: %atax_float_wrapped.y_loadEn: i1, loadAddr: %atax_float_wrapped.y_loadAddr: i4, storeEn: %atax_float_wrapped.y_storeEn: i1, storeAddr: %atax_float_wrapped.y_storeAddr: i4, storeData: %atax_float_wrapped.y_storeData: i32, din0: %y_din0: i32, din1: %y_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %mem_to_bram_converter_A.ce0, %mem_to_bram_converter_A.we0, %mem_to_bram_converter_A.address0, %mem_to_bram_converter_A.dout0, %mem_to_bram_converter_A.ce1, %mem_to_bram_converter_A.we1, %mem_to_bram_converter_A.address1, %mem_to_bram_converter_A.dout1, %mem_to_bram_converter_A.loadData = hw.instance "mem_to_bram_converter_A" @mem_to_bram_32_7(loadEn: %atax_float_wrapped.A_loadEn: i1, loadAddr: %atax_float_wrapped.A_loadAddr: i7, storeEn: %atax_float_wrapped.A_storeEn: i1, storeAddr: %atax_float_wrapped.A_storeAddr: i7, storeData: %atax_float_wrapped.A_storeData: i32, din0: %A_din0: i32, din1: %A_din1: i32) -> (ce0: i1, we0: i1, address0: i7, dout0: i32, ce1: i1, we1: i1, address1: i7, dout1: i32, loadData: i32)
    %atax_float_wrapped.out0, %atax_float_wrapped.A_end, %atax_float_wrapped.x_end, %atax_float_wrapped.y_end, %atax_float_wrapped.tmp_end, %atax_float_wrapped.end, %atax_float_wrapped.A_loadEn, %atax_float_wrapped.A_loadAddr, %atax_float_wrapped.A_storeEn, %atax_float_wrapped.A_storeAddr, %atax_float_wrapped.A_storeData, %atax_float_wrapped.x_loadEn, %atax_float_wrapped.x_loadAddr, %atax_float_wrapped.x_storeEn, %atax_float_wrapped.x_storeAddr, %atax_float_wrapped.x_storeData, %atax_float_wrapped.y_loadEn, %atax_float_wrapped.y_loadAddr, %atax_float_wrapped.y_storeEn, %atax_float_wrapped.y_storeAddr, %atax_float_wrapped.y_storeData, %atax_float_wrapped.tmp_loadEn, %atax_float_wrapped.tmp_loadAddr, %atax_float_wrapped.tmp_storeEn, %atax_float_wrapped.tmp_storeAddr, %atax_float_wrapped.tmp_storeData = hw.instance "atax_float_wrapped" @atax_float(A_loadData: %mem_to_bram_converter_A.loadData: i32, x_loadData: %mem_to_bram_converter_x.loadData: i32, y_loadData: %mem_to_bram_converter_y.loadData: i32, tmp_loadData: %mem_to_bram_converter_tmp.loadData: i32, A_start: %A_start: !handshake.control<>, x_start: %x_start: !handshake.control<>, y_start: %y_start: !handshake.control<>, tmp_start: %tmp_start: !handshake.control<>, start: %start: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (out0: !handshake.channel<i32>, A_end: !handshake.control<>, x_end: !handshake.control<>, y_end: !handshake.control<>, tmp_end: !handshake.control<>, end: !handshake.control<>, A_loadEn: i1, A_loadAddr: i7, A_storeEn: i1, A_storeAddr: i7, A_storeData: i32, x_loadEn: i1, x_loadAddr: i4, x_storeEn: i1, x_storeAddr: i4, x_storeData: i32, y_loadEn: i1, y_loadAddr: i4, y_storeEn: i1, y_storeAddr: i4, y_storeData: i32, tmp_loadEn: i1, tmp_loadAddr: i4, tmp_storeEn: i1, tmp_storeAddr: i4, tmp_storeData: i32)
    hw.output %atax_float_wrapped.out0, %atax_float_wrapped.A_end, %atax_float_wrapped.x_end, %atax_float_wrapped.y_end, %atax_float_wrapped.tmp_end, %atax_float_wrapped.end, %mem_to_bram_converter_A.ce0, %mem_to_bram_converter_A.we0, %mem_to_bram_converter_A.address0, %mem_to_bram_converter_A.dout0, %mem_to_bram_converter_A.ce1, %mem_to_bram_converter_A.we1, %mem_to_bram_converter_A.address1, %mem_to_bram_converter_A.dout1, %mem_to_bram_converter_x.ce0, %mem_to_bram_converter_x.we0, %mem_to_bram_converter_x.address0, %mem_to_bram_converter_x.dout0, %mem_to_bram_converter_x.ce1, %mem_to_bram_converter_x.we1, %mem_to_bram_converter_x.address1, %mem_to_bram_converter_x.dout1, %mem_to_bram_converter_y.ce0, %mem_to_bram_converter_y.we0, %mem_to_bram_converter_y.address0, %mem_to_bram_converter_y.dout0, %mem_to_bram_converter_y.ce1, %mem_to_bram_converter_y.we1, %mem_to_bram_converter_y.address1, %mem_to_bram_converter_y.dout1, %mem_to_bram_converter_tmp.ce0, %mem_to_bram_converter_tmp.we0, %mem_to_bram_converter_tmp.address0, %mem_to_bram_converter_tmp.dout0, %mem_to_bram_converter_tmp.ce1, %mem_to_bram_converter_tmp.we1, %mem_to_bram_converter_tmp.address1, %mem_to_bram_converter_tmp.dout1 : !handshake.channel<i32>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, i1, i1, i7, i32, i1, i1, i7, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32
  }
}

