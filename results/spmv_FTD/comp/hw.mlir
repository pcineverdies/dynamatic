module {
  hw.module @spmv(in %n : !handshake.channel<i32>, in %row_loadData : i32, in %col_loadData : i32, in %val_loadData : i32, in %vec_loadData : i32, in %out_loadData : i32, in %row_start : !handshake.control<>, in %col_start : !handshake.control<>, in %val_start : !handshake.control<>, in %vec_start : !handshake.control<>, in %out_start : !handshake.control<>, in %start : !handshake.control<>, in %clk : i1, in %rst : i1, out out0 : !handshake.channel<i32>, out row_end : !handshake.control<>, out col_end : !handshake.control<>, out val_end : !handshake.control<>, out vec_end : !handshake.control<>, out out_end : !handshake.control<>, out end : !handshake.control<>, out row_loadEn : i1, out row_loadAddr : i4, out row_storeEn : i1, out row_storeAddr : i4, out row_storeData : i32, out col_loadEn : i1, out col_loadAddr : i4, out col_storeEn : i1, out col_storeAddr : i4, out col_storeData : i32, out val_loadEn : i1, out val_loadAddr : i4, out val_storeEn : i1, out val_storeAddr : i4, out val_storeData : i32, out vec_loadEn : i1, out vec_loadAddr : i4, out vec_storeEn : i1, out vec_storeAddr : i4, out vec_storeData : i32, out out_loadEn : i1, out out_loadAddr : i4, out out_storeEn : i1, out out_storeAddr : i4, out out_storeData : i32) {
    %fork0.outs_0, %fork0.outs_1, %fork0.outs_2, %fork0.outs_3, %fork0.outs_4, %fork0.outs_5, %fork0.outs_6, %fork0.outs_7, %fork0.outs_8, %fork0.outs_9 = hw.instance "fork0" @handshake_fork_0(ins: %start: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>, outs_2: !handshake.control<>, outs_3: !handshake.control<>, outs_4: !handshake.control<>, outs_5: !handshake.control<>, outs_6: !handshake.control<>, outs_7: !handshake.control<>, outs_8: !handshake.control<>, outs_9: !handshake.control<>)
    %mem_controller5.memEnd, %mem_controller5.loadEn, %mem_controller5.loadAddr, %mem_controller5.storeEn, %mem_controller5.storeAddr, %mem_controller5.storeData = hw.instance "mem_controller5" @handshake_mem_controller_0(loadData: %out_loadData: i32, memStart: %out_start: !handshake.control<>, ctrl_0: %extsi6.outs: !handshake.channel<i32>, stAddr_0: %store0.addrOut: !handshake.channel<i4>, stData_0: %store0.dataToMem: !handshake.channel<i32>, ctrlEnd: %fork0.outs_4: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %mem_controller6.ldData_0, %mem_controller6.memEnd, %mem_controller6.loadEn, %mem_controller6.loadAddr, %mem_controller6.storeEn, %mem_controller6.storeAddr, %mem_controller6.storeData = hw.instance "mem_controller6" @handshake_mem_controller_1(loadData: %vec_loadData: i32, memStart: %vec_start: !handshake.control<>, ldAddr_0: %load9.addrOut: !handshake.channel<i4>, ctrlEnd: %fork0.outs_3: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %mem_controller7.ldData_0, %mem_controller7.memEnd, %mem_controller7.loadEn, %mem_controller7.loadAddr, %mem_controller7.storeEn, %mem_controller7.storeAddr, %mem_controller7.storeData = hw.instance "mem_controller7" @handshake_mem_controller_1(loadData: %val_loadData: i32, memStart: %val_start: !handshake.control<>, ldAddr_0: %load8.addrOut: !handshake.channel<i4>, ctrlEnd: %fork0.outs_2: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %mem_controller8.ldData_0, %mem_controller8.memEnd, %mem_controller8.loadEn, %mem_controller8.loadAddr, %mem_controller8.storeEn, %mem_controller8.storeAddr, %mem_controller8.storeData = hw.instance "mem_controller8" @handshake_mem_controller_1(loadData: %col_loadData: i32, memStart: %col_start: !handshake.control<>, ldAddr_0: %load7.addrOut: !handshake.channel<i4>, ctrlEnd: %fork0.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %mem_controller9.ldData_0, %mem_controller9.ldData_1, %mem_controller9.memEnd, %mem_controller9.loadEn, %mem_controller9.loadAddr, %mem_controller9.storeEn, %mem_controller9.storeAddr, %mem_controller9.storeData = hw.instance "mem_controller9" @handshake_mem_controller_2(loadData: %row_loadData: i32, memStart: %row_start: !handshake.control<>, ldAddr_0: %load0.addrOut: !handshake.channel<i4>, ldAddr_1: %load1.addrOut: !handshake.channel<i4>, ctrlEnd: %fork0.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (ldData_0: !handshake.channel<i32>, ldData_1: !handshake.channel<i32>, memEnd: !handshake.control<>, loadEn: i1, loadAddr: i4, storeEn: i1, storeAddr: i4, storeData: i32)
    %buffer24.outs = hw.instance "buffer24" @handshake_buffer_0(ins: %mux5.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer25.outs = hw.instance "buffer25" @handshake_buffer_1(ins: %buffer24.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %cond_br26.trueOut, %cond_br26.falseOut = hw.instance "cond_br26" @handshake_cond_br_0(condition: %fork5.outs_2: !handshake.channel<i1>, data: %buffer25.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    hw.instance "sink0" @handshake_sink_0(ins: %cond_br26.trueOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> ()
    %cond_br27.trueOut, %cond_br27.falseOut = hw.instance "cond_br27" @handshake_cond_br_0(condition: %fork5.outs_3: !handshake.channel<i1>, data: %fork3.outs_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    hw.instance "sink1" @handshake_sink_0(ins: %cond_br27.falseOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> ()
    %constant1.outs = hw.instance "constant1" @handshake_constant_0(ctrl: %fork0.outs_9: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %fork1.outs_0, %fork1.outs_1, %fork1.outs_2 = hw.instance "fork1" @handshake_fork_1(ins: %constant1.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>)
    %extsi0.outs = hw.instance "extsi0" @handshake_extsi_0(ins: %fork1.outs_0: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %extsi1.outs = hw.instance "extsi1" @handshake_extsi_0(ins: %fork1.outs_1: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %merge0.outs = hw.instance "merge0" @handshake_merge_0(ins_0: %fork1.outs_2: !handshake.channel<i1>, ins_1: %fork5.outs_4: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %buffer13.outs = hw.instance "buffer13" @handshake_buffer_2(ins: %merge0.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %fork2.outs_0, %fork2.outs_1, %fork2.outs_2, %fork2.outs_3 = hw.instance "fork2" @handshake_fork_2(ins: %buffer13.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>)
    %mux0.outs = hw.instance "mux0" @handshake_mux_0(index: %fork2.outs_3: !handshake.channel<i1>, ins_0: %fork0.outs_8: !handshake.control<>, ins_1: %fork6.outs_3: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %mux4.outs = hw.instance "mux4" @handshake_mux_1(index: %fork2.outs_2: !handshake.channel<i1>, ins_0: %n: !handshake.channel<i32>, ins_1: %cond_br27.trueOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer20.outs = hw.instance "buffer20" @handshake_buffer_0(ins: %mux4.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer21.outs = hw.instance "buffer21" @handshake_buffer_1(ins: %buffer20.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %fork3.outs_0, %fork3.outs_1 = hw.instance "fork3" @handshake_fork_3(ins: %buffer21.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>)
    %mux5.outs = hw.instance "mux5" @handshake_mux_1(index: %fork2.outs_1: !handshake.channel<i1>, ins_0: %extsi1.outs: !handshake.channel<i32>, ins_1: %fork8.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %mux6.outs = hw.instance "mux6" @handshake_mux_1(index: %fork2.outs_0: !handshake.channel<i1>, ins_0: %extsi0.outs: !handshake.channel<i32>, ins_1: %addi3.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer26.outs = hw.instance "buffer26" @handshake_buffer_0(ins: %mux6.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer27.outs = hw.instance "buffer27" @handshake_buffer_1(ins: %buffer26.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %fork4.outs_0, %fork4.outs_1 = hw.instance "fork4" @handshake_fork_3(ins: %buffer27.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>)
    %cmpi0.result = hw.instance "cmpi0" @handshake_cmpi_0(lhs: %fork4.outs_1: !handshake.channel<i32>, rhs: %fork3.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i1>)
    %fork5.outs_0, %fork5.outs_1, %fork5.outs_2, %fork5.outs_3, %fork5.outs_4 = hw.instance "fork5" @handshake_fork_4(ins: %cmpi0.result: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>, outs_4: !handshake.channel<i1>)
    %buffer18.outs = hw.instance "buffer18" @handshake_buffer_3(ins: %mux0.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer19.outs = hw.instance "buffer19" @handshake_buffer_4(ins: %buffer18.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %cond_br28.trueOut, %cond_br28.falseOut = hw.instance "cond_br28" @handshake_cond_br_1(condition: %fork5.outs_1: !handshake.channel<i1>, data: %buffer19.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    hw.instance "sink2" @handshake_sink_1(ins: %cond_br28.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> ()
    %fork6.outs_0, %fork6.outs_1, %fork6.outs_2, %fork6.outs_3 = hw.instance "fork6" @handshake_fork_5(ins: %cond_br28.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>, outs_2: !handshake.control<>, outs_3: !handshake.control<>)
    %constant8.outs = hw.instance "constant8" @handshake_constant_1(ctrl: %fork6.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i2>)
    %fork7.outs_0, %fork7.outs_1 = hw.instance "fork7" @handshake_fork_6(ins: %constant8.outs: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i2>, outs_1: !handshake.channel<i2>)
    %buffer39.outs = hw.instance "buffer39" @handshake_buffer_5(ins: %fork7.outs_0: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i2>)
    %extsi7.outs = hw.instance "extsi7" @handshake_extsi_1(ins: %buffer39.outs: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %extsi2.outs = hw.instance "extsi2" @handshake_extsi_2(ins: %fork7.outs_1: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer35.outs = hw.instance "buffer35" @handshake_buffer_6(ins: %fork6.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %constant9.outs = hw.instance "constant9" @handshake_constant_0(ctrl: %buffer35.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %extsi4.outs = hw.instance "extsi4" @handshake_extsi_0(ins: %constant9.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %load0.addrOut, %load0.dataOut = hw.instance "load0" @handshake_load_0(addrIn: %trunci5.outs: !handshake.channel<i4>, dataFromMem: %mem_controller9.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %fork8.outs_0, %fork8.outs_1 = hw.instance "fork8" @handshake_fork_3(ins: %load0.dataOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>)
    %addi1.result = hw.instance "addi1" @handshake_addi_0(lhs: %trunci3.outs: !handshake.channel<i4>, rhs: %extsi7.outs: !handshake.channel<i4>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i4>)
    %load1.addrOut, %load1.dataOut = hw.instance "load1" @handshake_load_0(addrIn: %addi1.result: !handshake.channel<i4>, dataFromMem: %mem_controller9.ldData_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %cond_br29.trueOut, %cond_br29.falseOut = hw.instance "cond_br29" @handshake_cond_br_0(condition: %fork12.outs_3: !handshake.channel<i1>, data: %fork10.outs_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    hw.instance "sink3" @handshake_sink_0(ins: %cond_br29.falseOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> ()
    %constant13.outs = hw.instance "constant13" @handshake_constant_0(ctrl: %fork0.outs_7: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %merge7.outs = hw.instance "merge7" @handshake_merge_0(ins_0: %constant13.outs: !handshake.channel<i1>, ins_1: %fork12.outs_4: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %buffer43.outs = hw.instance "buffer43" @handshake_buffer_2(ins: %merge7.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %fork9.outs_0, %fork9.outs_1, %fork9.outs_2, %fork9.outs_3 = hw.instance "fork9" @handshake_fork_2(ins: %buffer43.outs: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>)
    %buffer37.outs = hw.instance "buffer37" @handshake_buffer_6(ins: %fork6.outs_2: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %mux7.outs = hw.instance "mux7" @handshake_mux_0(index: %fork9.outs_3: !handshake.channel<i1>, ins_0: %buffer37.outs: !handshake.control<>, ins_1: %fork14.outs_1: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %mux8.outs = hw.instance "mux8" @handshake_mux_1(index: %fork9.outs_2: !handshake.channel<i1>, ins_0: %load1.dataOut: !handshake.channel<i32>, ins_1: %cond_br29.trueOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer50.outs = hw.instance "buffer50" @handshake_buffer_0(ins: %mux8.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer51.outs = hw.instance "buffer51" @handshake_buffer_1(ins: %buffer50.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %fork10.outs_0, %fork10.outs_1 = hw.instance "fork10" @handshake_fork_3(ins: %buffer51.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>)
    %buffer45.outs = hw.instance "buffer45" @handshake_buffer_7(ins: %fork9.outs_1: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %mux9.outs = hw.instance "mux9" @handshake_mux_1(index: %buffer45.outs: !handshake.channel<i1>, ins_0: %extsi4.outs: !handshake.channel<i32>, ins_1: %addi0.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer42.outs = hw.instance "buffer42" @handshake_buffer_8(ins: %fork8.outs_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %mux10.outs = hw.instance "mux10" @handshake_mux_1(index: %fork9.outs_0: !handshake.channel<i1>, ins_0: %buffer42.outs: !handshake.channel<i32>, ins_1: %addi2.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer56.outs = hw.instance "buffer56" @handshake_buffer_0(ins: %mux10.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer57.outs = hw.instance "buffer57" @handshake_buffer_1(ins: %buffer56.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %fork11.outs_0, %fork11.outs_1 = hw.instance "fork11" @handshake_fork_3(ins: %buffer57.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>)
    %cmpi1.result = hw.instance "cmpi1" @handshake_cmpi_1(lhs: %fork11.outs_1: !handshake.channel<i32>, rhs: %fork10.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i1>)
    %fork12.outs_0, %fork12.outs_1, %fork12.outs_2, %fork12.outs_3, %fork12.outs_4 = hw.instance "fork12" @handshake_fork_4(ins: %cmpi1.result: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i1>, outs_1: !handshake.channel<i1>, outs_2: !handshake.channel<i1>, outs_3: !handshake.channel<i1>, outs_4: !handshake.channel<i1>)
    %buffer54.outs = hw.instance "buffer54" @handshake_buffer_0(ins: %mux9.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer55.outs = hw.instance "buffer55" @handshake_buffer_1(ins: %buffer54.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %buffer62.outs = hw.instance "buffer62" @handshake_buffer_7(ins: %fork12.outs_2: !handshake.channel<i1>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i1>)
    %cond_br30.trueOut, %cond_br30.falseOut = hw.instance "cond_br30" @handshake_cond_br_0(condition: %buffer62.outs: !handshake.channel<i1>, data: %buffer55.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    %cond_br31.trueOut, %cond_br31.falseOut = hw.instance "cond_br31" @handshake_cond_br_0(condition: %fork12.outs_1: !handshake.channel<i1>, data: %fork11.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    hw.instance "sink4" @handshake_sink_0(ins: %cond_br31.falseOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> ()
    %fork13.outs_0, %fork13.outs_1, %fork13.outs_2 = hw.instance "fork13" @handshake_fork_7(ins: %cond_br31.trueOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>, outs_2: !handshake.channel<i32>)
    %trunci0.outs = hw.instance "trunci0" @handshake_trunci_0(ins: %fork13.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %trunci1.outs = hw.instance "trunci1" @handshake_trunci_0(ins: %fork13.outs_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %buffer48.outs = hw.instance "buffer48" @handshake_buffer_3(ins: %mux7.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %buffer49.outs = hw.instance "buffer49" @handshake_buffer_4(ins: %buffer48.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.control<>)
    %cond_br32.trueOut, %cond_br32.falseOut = hw.instance "cond_br32" @handshake_cond_br_1(condition: %fork12.outs_0: !handshake.channel<i1>, data: %buffer49.outs: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.control<>, falseOut: !handshake.control<>)
    hw.instance "sink5" @handshake_sink_1(ins: %cond_br32.falseOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> ()
    %fork14.outs_0, %fork14.outs_1 = hw.instance "fork14" @handshake_fork_8(ins: %cond_br32.trueOut: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.control<>, outs_1: !handshake.control<>)
    %constant10.outs = hw.instance "constant10" @handshake_constant_1(ctrl: %fork14.outs_0: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i2>)
    %extsi5.outs = hw.instance "extsi5" @handshake_extsi_2(ins: %constant10.outs: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %load7.addrOut, %load7.dataOut = hw.instance "load7" @handshake_load_0(addrIn: %trunci1.outs: !handshake.channel<i4>, dataFromMem: %mem_controller8.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %trunci2.outs = hw.instance "trunci2" @handshake_trunci_0(ins: %load7.dataOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %load8.addrOut, %load8.dataOut = hw.instance "load8" @handshake_load_0(addrIn: %trunci0.outs: !handshake.channel<i4>, dataFromMem: %mem_controller7.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %load9.addrOut, %load9.dataOut = hw.instance "load9" @handshake_load_0(addrIn: %trunci2.outs: !handshake.channel<i4>, dataFromMem: %mem_controller6.ldData_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataOut: !handshake.channel<i32>)
    %muli0.result = hw.instance "muli0" @handshake_muli_0(lhs: %load8.dataOut: !handshake.channel<i32>, rhs: %load9.dataOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    %addi0.result = hw.instance "addi0" @handshake_addi_1(lhs: %cond_br30.trueOut: !handshake.channel<i32>, rhs: %muli0.result: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    %addi2.result = hw.instance "addi2" @handshake_addi_1(lhs: %fork13.outs_2: !handshake.channel<i32>, rhs: %extsi5.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    %cond_br33.trueOut, %cond_br33.falseOut = hw.instance "cond_br33" @handshake_cond_br_0(condition: %fork5.outs_0: !handshake.channel<i1>, data: %fork4.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (trueOut: !handshake.channel<i32>, falseOut: !handshake.channel<i32>)
    hw.instance "sink6" @handshake_sink_0(ins: %cond_br33.falseOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> ()
    %fork15.outs_0, %fork15.outs_1, %fork15.outs_2, %fork15.outs_3 = hw.instance "fork15" @handshake_fork_9(ins: %cond_br33.trueOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs_0: !handshake.channel<i32>, outs_1: !handshake.channel<i32>, outs_2: !handshake.channel<i32>, outs_3: !handshake.channel<i32>)
    %buffer70.outs = hw.instance "buffer70" @handshake_buffer_8(ins: %fork15.outs_0: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %trunci3.outs = hw.instance "trunci3" @handshake_trunci_0(ins: %buffer70.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %buffer71.outs = hw.instance "buffer71" @handshake_buffer_8(ins: %fork15.outs_1: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %trunci4.outs = hw.instance "trunci4" @handshake_trunci_0(ins: %buffer71.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %trunci5.outs = hw.instance "trunci5" @handshake_trunci_0(ins: %fork15.outs_2: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i4>)
    %constant11.outs = hw.instance "constant11" @handshake_constant_1(ctrl: %fork0.outs_5: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i2>)
    %extsi6.outs = hw.instance "extsi6" @handshake_extsi_2(ins: %constant11.outs: !handshake.channel<i2>, clk: %clk: i1, rst: %rst: i1) -> (outs: !handshake.channel<i32>)
    %store0.addrOut, %store0.dataToMem = hw.instance "store0" @handshake_store_0(addrIn: %trunci4.outs: !handshake.channel<i4>, dataIn: %cond_br30.falseOut: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (addrOut: !handshake.channel<i4>, dataToMem: !handshake.channel<i32>)
    %addi3.result = hw.instance "addi3" @handshake_addi_1(lhs: %fork15.outs_3: !handshake.channel<i32>, rhs: %extsi2.outs: !handshake.channel<i32>, clk: %clk: i1, rst: %rst: i1) -> (result: !handshake.channel<i32>)
    hw.output %cond_br26.falseOut, %mem_controller9.memEnd, %mem_controller8.memEnd, %mem_controller7.memEnd, %mem_controller6.memEnd, %mem_controller5.memEnd, %fork0.outs_6, %mem_controller9.loadEn, %mem_controller9.loadAddr, %mem_controller9.storeEn, %mem_controller9.storeAddr, %mem_controller9.storeData, %mem_controller8.loadEn, %mem_controller8.loadAddr, %mem_controller8.storeEn, %mem_controller8.storeAddr, %mem_controller8.storeData, %mem_controller7.loadEn, %mem_controller7.loadAddr, %mem_controller7.storeEn, %mem_controller7.storeAddr, %mem_controller7.storeData, %mem_controller6.loadEn, %mem_controller6.loadAddr, %mem_controller6.storeEn, %mem_controller6.storeAddr, %mem_controller6.storeData, %mem_controller5.loadEn, %mem_controller5.loadAddr, %mem_controller5.storeEn, %mem_controller5.storeAddr, %mem_controller5.storeData : !handshake.channel<i32>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, i1, i4, i1, i4, i32, i1, i4, i1, i4, i32, i1, i4, i1, i4, i32, i1, i4, i1, i4, i32, i1, i4, i1, i4, i32
  }
  hw.module.extern @handshake_fork_0(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>, out outs_2 : !handshake.control<>, out outs_3 : !handshake.control<>, out outs_4 : !handshake.control<>, out outs_5 : !handshake.control<>, out outs_6 : !handshake.control<>, out outs_7 : !handshake.control<>, out outs_8 : !handshake.control<>, out outs_9 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 10 : ui32}}
  hw.module.extern @handshake_mem_controller_0(in %loadData : i32, in %memStart : !handshake.control<>, in %ctrl_0 : !handshake.channel<i32>, in %stAddr_0 : !handshake.channel<i4>, in %stData_0 : !handshake.channel<i32>, in %ctrlEnd : !handshake.control<>, in %clk : i1, in %rst : i1, out memEnd : !handshake.control<>, out loadEn : i1, out loadAddr : i4, out storeEn : i1, out storeAddr : i4, out storeData : i32) attributes {hw.name = "handshake.mem_controller", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<i32>, NUM_CONTROLS = 1 : ui32, NUM_LOADS = 0 : ui32, NUM_STORES = 1 : ui32}}
  hw.module.extern @handshake_mem_controller_1(in %loadData : i32, in %memStart : !handshake.control<>, in %ldAddr_0 : !handshake.channel<i4>, in %ctrlEnd : !handshake.control<>, in %clk : i1, in %rst : i1, out ldData_0 : !handshake.channel<i32>, out memEnd : !handshake.control<>, out loadEn : i1, out loadAddr : i4, out storeEn : i1, out storeAddr : i4, out storeData : i32) attributes {hw.name = "handshake.mem_controller", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<i32>, NUM_CONTROLS = 0 : ui32, NUM_LOADS = 1 : ui32, NUM_STORES = 0 : ui32}}
  hw.module.extern @handshake_mem_controller_2(in %loadData : i32, in %memStart : !handshake.control<>, in %ldAddr_0 : !handshake.channel<i4>, in %ldAddr_1 : !handshake.channel<i4>, in %ctrlEnd : !handshake.control<>, in %clk : i1, in %rst : i1, out ldData_0 : !handshake.channel<i32>, out ldData_1 : !handshake.channel<i32>, out memEnd : !handshake.control<>, out loadEn : i1, out loadAddr : i4, out storeEn : i1, out storeAddr : i4, out storeData : i32) attributes {hw.name = "handshake.mem_controller", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<i32>, NUM_CONTROLS = 0 : ui32, NUM_LOADS = 2 : ui32, NUM_STORES = 0 : ui32}}
  hw.module.extern @handshake_buffer_0(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}}
  hw.module.extern @handshake_buffer_1(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_cond_br_0(in %condition : !handshake.channel<i1>, in %data : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out trueOut : !handshake.channel<i32>, out falseOut : !handshake.channel<i32>) attributes {hw.name = "handshake.cond_br", hw.parameters = {DATA_TYPE = !handshake.channel<i32>}}
  hw.module.extern @handshake_sink_0(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1) attributes {hw.name = "handshake.sink", hw.parameters = {DATA_TYPE = !handshake.channel<i32>}}
  hw.module.extern @handshake_constant_0(in %ctrl : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.constant", hw.parameters = {DATA_WIDTH = 1 : ui32, VALUE = "0"}}
  hw.module.extern @handshake_fork_1(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i1>, out outs_1 : !handshake.channel<i1>, out outs_2 : !handshake.channel<i1>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 3 : ui32}}
  hw.module.extern @handshake_extsi_0(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i1>, OUTPUT_TYPE = !handshake.channel<i32>}}
  hw.module.extern @handshake_merge_0(in %ins_0 : !handshake.channel<i1>, in %ins_1 : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.merge", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_buffer_2(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_fork_2(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i1>, out outs_1 : !handshake.channel<i1>, out outs_2 : !handshake.channel<i1>, out outs_3 : !handshake.channel<i1>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 4 : ui32}}
  hw.module.extern @handshake_mux_0(in %index : !handshake.channel<i1>, in %ins_0 : !handshake.control<>, in %ins_1 : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.mux", hw.parameters = {DATA_TYPE = !handshake.control<>, SELECT_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_mux_1(in %index : !handshake.channel<i1>, in %ins_0 : !handshake.channel<i32>, in %ins_1 : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.mux", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, SELECT_TYPE = !handshake.channel<i1>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_fork_3(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i32>, out outs_1 : !handshake.channel<i32>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_cmpi_0(in %lhs : !handshake.channel<i32>, in %rhs : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i1>) attributes {hw.name = "handshake.cmpi", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, PREDICATE = "ult"}}
  hw.module.extern @handshake_fork_4(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i1>, out outs_1 : !handshake.channel<i1>, out outs_2 : !handshake.channel<i1>, out outs_3 : !handshake.channel<i1>, out outs_4 : !handshake.channel<i1>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, SIZE = 5 : ui32}}
  hw.module.extern @handshake_buffer_3(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.control<>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}}
  hw.module.extern @handshake_buffer_4(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.control<>, NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_cond_br_1(in %condition : !handshake.channel<i1>, in %data : !handshake.control<>, in %clk : i1, in %rst : i1, out trueOut : !handshake.control<>, out falseOut : !handshake.control<>) attributes {hw.name = "handshake.cond_br", hw.parameters = {DATA_TYPE = !handshake.control<>}}
  hw.module.extern @handshake_sink_1(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1) attributes {hw.name = "handshake.sink", hw.parameters = {DATA_TYPE = !handshake.control<>}}
  hw.module.extern @handshake_fork_5(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>, out outs_2 : !handshake.control<>, out outs_3 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 4 : ui32}}
  hw.module.extern @handshake_constant_1(in %ctrl : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i2>) attributes {hw.name = "handshake.constant", hw.parameters = {DATA_WIDTH = 2 : ui32, VALUE = "01"}}
  hw.module.extern @handshake_fork_6(in %ins : !handshake.channel<i2>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i2>, out outs_1 : !handshake.channel<i2>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i2>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_buffer_5(in %ins : !handshake.channel<i2>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i2>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i2>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_extsi_1(in %ins : !handshake.channel<i2>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i4>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i2>, OUTPUT_TYPE = !handshake.channel<i4>}}
  hw.module.extern @handshake_extsi_2(in %ins : !handshake.channel<i2>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.extsi", hw.parameters = {INPUT_TYPE = !handshake.channel<i2>, OUTPUT_TYPE = !handshake.channel<i32>}}
  hw.module.extern @handshake_buffer_6(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs : !handshake.control<>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.control<>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_load_0(in %addrIn : !handshake.channel<i4>, in %dataFromMem : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out addrOut : !handshake.channel<i4>, out dataOut : !handshake.channel<i32>) attributes {hw.name = "handshake.load", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<i32>}}
  hw.module.extern @handshake_addi_0(in %lhs : !handshake.channel<i4>, in %rhs : !handshake.channel<i4>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i4>) attributes {hw.name = "handshake.addi", hw.parameters = {DATA_TYPE = !handshake.channel<i4>}}
  hw.module.extern @handshake_buffer_7(in %ins : !handshake.channel<i1>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i1>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i1>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_buffer_8(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i32>) attributes {hw.name = "handshake.buffer", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, NUM_SLOTS = 5 : ui32, TIMING = #handshake<timing {R: 1}>}}
  hw.module.extern @handshake_cmpi_1(in %lhs : !handshake.channel<i32>, in %rhs : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i1>) attributes {hw.name = "handshake.cmpi", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, PREDICATE = "slt"}}
  hw.module.extern @handshake_fork_7(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i32>, out outs_1 : !handshake.channel<i32>, out outs_2 : !handshake.channel<i32>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, SIZE = 3 : ui32}}
  hw.module.extern @handshake_trunci_0(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs : !handshake.channel<i4>) attributes {hw.name = "handshake.trunci", hw.parameters = {INPUT_TYPE = !handshake.channel<i32>, OUTPUT_TYPE = !handshake.channel<i4>}}
  hw.module.extern @handshake_fork_8(in %ins : !handshake.control<>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.control<>, out outs_1 : !handshake.control<>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.control<>, SIZE = 2 : ui32}}
  hw.module.extern @handshake_muli_0(in %lhs : !handshake.channel<i32>, in %rhs : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i32>) attributes {hw.name = "handshake.muli", hw.parameters = {DATA_TYPE = !handshake.channel<i32>}}
  hw.module.extern @handshake_addi_1(in %lhs : !handshake.channel<i32>, in %rhs : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out result : !handshake.channel<i32>) attributes {hw.name = "handshake.addi", hw.parameters = {DATA_TYPE = !handshake.channel<i32>}}
  hw.module.extern @handshake_fork_9(in %ins : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out outs_0 : !handshake.channel<i32>, out outs_1 : !handshake.channel<i32>, out outs_2 : !handshake.channel<i32>, out outs_3 : !handshake.channel<i32>) attributes {hw.name = "handshake.fork", hw.parameters = {DATA_TYPE = !handshake.channel<i32>, SIZE = 4 : ui32}}
  hw.module.extern @handshake_store_0(in %addrIn : !handshake.channel<i4>, in %dataIn : !handshake.channel<i32>, in %clk : i1, in %rst : i1, out addrOut : !handshake.channel<i4>, out dataToMem : !handshake.channel<i32>) attributes {hw.name = "handshake.store", hw.parameters = {ADDR_TYPE = !handshake.channel<i4>, DATA_TYPE = !handshake.channel<i32>}}
  hw.module.extern @mem_to_bram_32_4(in %loadEn : i1, in %loadAddr : i4, in %storeEn : i1, in %storeAddr : i4, in %storeData : i32, in %din0 : i32, in %din1 : i32, out ce0 : i1, out we0 : i1, out address0 : i4, out dout0 : i32, out ce1 : i1, out we1 : i1, out address1 : i4, out dout1 : i32, out loadData : i32) attributes {hw.name = "mem_to_bram", hw.parameters = {ADDR_WIDTH = 4 : ui32, DATA_WIDTH = 32 : ui32}}
  hw.module @spmv_wrapper(in %n : !handshake.channel<i32>, in %row_din0 : i32, in %row_din1 : i32, in %col_din0 : i32, in %col_din1 : i32, in %val_din0 : i32, in %val_din1 : i32, in %vec_din0 : i32, in %vec_din1 : i32, in %out_din0 : i32, in %out_din1 : i32, in %row_start : !handshake.control<>, in %col_start : !handshake.control<>, in %val_start : !handshake.control<>, in %vec_start : !handshake.control<>, in %out_start : !handshake.control<>, in %start : !handshake.control<>, in %clk : i1, in %rst : i1, out out0 : !handshake.channel<i32>, out row_end : !handshake.control<>, out col_end : !handshake.control<>, out val_end : !handshake.control<>, out vec_end : !handshake.control<>, out out_end : !handshake.control<>, out end : !handshake.control<>, out row_ce0 : i1, out row_we0 : i1, out row_address0 : i4, out row_dout0 : i32, out row_ce1 : i1, out row_we1 : i1, out row_address1 : i4, out row_dout1 : i32, out col_ce0 : i1, out col_we0 : i1, out col_address0 : i4, out col_dout0 : i32, out col_ce1 : i1, out col_we1 : i1, out col_address1 : i4, out col_dout1 : i32, out val_ce0 : i1, out val_we0 : i1, out val_address0 : i4, out val_dout0 : i32, out val_ce1 : i1, out val_we1 : i1, out val_address1 : i4, out val_dout1 : i32, out vec_ce0 : i1, out vec_we0 : i1, out vec_address0 : i4, out vec_dout0 : i32, out vec_ce1 : i1, out vec_we1 : i1, out vec_address1 : i4, out vec_dout1 : i32, out out_ce0 : i1, out out_we0 : i1, out out_address0 : i4, out out_dout0 : i32, out out_ce1 : i1, out out_we1 : i1, out out_address1 : i4, out out_dout1 : i32) {
    %mem_to_bram_converter_out.ce0, %mem_to_bram_converter_out.we0, %mem_to_bram_converter_out.address0, %mem_to_bram_converter_out.dout0, %mem_to_bram_converter_out.ce1, %mem_to_bram_converter_out.we1, %mem_to_bram_converter_out.address1, %mem_to_bram_converter_out.dout1, %mem_to_bram_converter_out.loadData = hw.instance "mem_to_bram_converter_out" @mem_to_bram_32_4(loadEn: %spmv_wrapped.out_loadEn: i1, loadAddr: %spmv_wrapped.out_loadAddr: i4, storeEn: %spmv_wrapped.out_storeEn: i1, storeAddr: %spmv_wrapped.out_storeAddr: i4, storeData: %spmv_wrapped.out_storeData: i32, din0: %out_din0: i32, din1: %out_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %mem_to_bram_converter_col.ce0, %mem_to_bram_converter_col.we0, %mem_to_bram_converter_col.address0, %mem_to_bram_converter_col.dout0, %mem_to_bram_converter_col.ce1, %mem_to_bram_converter_col.we1, %mem_to_bram_converter_col.address1, %mem_to_bram_converter_col.dout1, %mem_to_bram_converter_col.loadData = hw.instance "mem_to_bram_converter_col" @mem_to_bram_32_4(loadEn: %spmv_wrapped.col_loadEn: i1, loadAddr: %spmv_wrapped.col_loadAddr: i4, storeEn: %spmv_wrapped.col_storeEn: i1, storeAddr: %spmv_wrapped.col_storeAddr: i4, storeData: %spmv_wrapped.col_storeData: i32, din0: %col_din0: i32, din1: %col_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %mem_to_bram_converter_vec.ce0, %mem_to_bram_converter_vec.we0, %mem_to_bram_converter_vec.address0, %mem_to_bram_converter_vec.dout0, %mem_to_bram_converter_vec.ce1, %mem_to_bram_converter_vec.we1, %mem_to_bram_converter_vec.address1, %mem_to_bram_converter_vec.dout1, %mem_to_bram_converter_vec.loadData = hw.instance "mem_to_bram_converter_vec" @mem_to_bram_32_4(loadEn: %spmv_wrapped.vec_loadEn: i1, loadAddr: %spmv_wrapped.vec_loadAddr: i4, storeEn: %spmv_wrapped.vec_storeEn: i1, storeAddr: %spmv_wrapped.vec_storeAddr: i4, storeData: %spmv_wrapped.vec_storeData: i32, din0: %vec_din0: i32, din1: %vec_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %mem_to_bram_converter_row.ce0, %mem_to_bram_converter_row.we0, %mem_to_bram_converter_row.address0, %mem_to_bram_converter_row.dout0, %mem_to_bram_converter_row.ce1, %mem_to_bram_converter_row.we1, %mem_to_bram_converter_row.address1, %mem_to_bram_converter_row.dout1, %mem_to_bram_converter_row.loadData = hw.instance "mem_to_bram_converter_row" @mem_to_bram_32_4(loadEn: %spmv_wrapped.row_loadEn: i1, loadAddr: %spmv_wrapped.row_loadAddr: i4, storeEn: %spmv_wrapped.row_storeEn: i1, storeAddr: %spmv_wrapped.row_storeAddr: i4, storeData: %spmv_wrapped.row_storeData: i32, din0: %row_din0: i32, din1: %row_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %mem_to_bram_converter_val.ce0, %mem_to_bram_converter_val.we0, %mem_to_bram_converter_val.address0, %mem_to_bram_converter_val.dout0, %mem_to_bram_converter_val.ce1, %mem_to_bram_converter_val.we1, %mem_to_bram_converter_val.address1, %mem_to_bram_converter_val.dout1, %mem_to_bram_converter_val.loadData = hw.instance "mem_to_bram_converter_val" @mem_to_bram_32_4(loadEn: %spmv_wrapped.val_loadEn: i1, loadAddr: %spmv_wrapped.val_loadAddr: i4, storeEn: %spmv_wrapped.val_storeEn: i1, storeAddr: %spmv_wrapped.val_storeAddr: i4, storeData: %spmv_wrapped.val_storeData: i32, din0: %val_din0: i32, din1: %val_din1: i32) -> (ce0: i1, we0: i1, address0: i4, dout0: i32, ce1: i1, we1: i1, address1: i4, dout1: i32, loadData: i32)
    %spmv_wrapped.out0, %spmv_wrapped.row_end, %spmv_wrapped.col_end, %spmv_wrapped.val_end, %spmv_wrapped.vec_end, %spmv_wrapped.out_end, %spmv_wrapped.end, %spmv_wrapped.row_loadEn, %spmv_wrapped.row_loadAddr, %spmv_wrapped.row_storeEn, %spmv_wrapped.row_storeAddr, %spmv_wrapped.row_storeData, %spmv_wrapped.col_loadEn, %spmv_wrapped.col_loadAddr, %spmv_wrapped.col_storeEn, %spmv_wrapped.col_storeAddr, %spmv_wrapped.col_storeData, %spmv_wrapped.val_loadEn, %spmv_wrapped.val_loadAddr, %spmv_wrapped.val_storeEn, %spmv_wrapped.val_storeAddr, %spmv_wrapped.val_storeData, %spmv_wrapped.vec_loadEn, %spmv_wrapped.vec_loadAddr, %spmv_wrapped.vec_storeEn, %spmv_wrapped.vec_storeAddr, %spmv_wrapped.vec_storeData, %spmv_wrapped.out_loadEn, %spmv_wrapped.out_loadAddr, %spmv_wrapped.out_storeEn, %spmv_wrapped.out_storeAddr, %spmv_wrapped.out_storeData = hw.instance "spmv_wrapped" @spmv(n: %n: !handshake.channel<i32>, row_loadData: %mem_to_bram_converter_row.loadData: i32, col_loadData: %mem_to_bram_converter_col.loadData: i32, val_loadData: %mem_to_bram_converter_val.loadData: i32, vec_loadData: %mem_to_bram_converter_vec.loadData: i32, out_loadData: %mem_to_bram_converter_out.loadData: i32, row_start: %row_start: !handshake.control<>, col_start: %col_start: !handshake.control<>, val_start: %val_start: !handshake.control<>, vec_start: %vec_start: !handshake.control<>, out_start: %out_start: !handshake.control<>, start: %start: !handshake.control<>, clk: %clk: i1, rst: %rst: i1) -> (out0: !handshake.channel<i32>, row_end: !handshake.control<>, col_end: !handshake.control<>, val_end: !handshake.control<>, vec_end: !handshake.control<>, out_end: !handshake.control<>, end: !handshake.control<>, row_loadEn: i1, row_loadAddr: i4, row_storeEn: i1, row_storeAddr: i4, row_storeData: i32, col_loadEn: i1, col_loadAddr: i4, col_storeEn: i1, col_storeAddr: i4, col_storeData: i32, val_loadEn: i1, val_loadAddr: i4, val_storeEn: i1, val_storeAddr: i4, val_storeData: i32, vec_loadEn: i1, vec_loadAddr: i4, vec_storeEn: i1, vec_storeAddr: i4, vec_storeData: i32, out_loadEn: i1, out_loadAddr: i4, out_storeEn: i1, out_storeAddr: i4, out_storeData: i32)
    hw.output %spmv_wrapped.out0, %spmv_wrapped.row_end, %spmv_wrapped.col_end, %spmv_wrapped.val_end, %spmv_wrapped.vec_end, %spmv_wrapped.out_end, %spmv_wrapped.end, %mem_to_bram_converter_row.ce0, %mem_to_bram_converter_row.we0, %mem_to_bram_converter_row.address0, %mem_to_bram_converter_row.dout0, %mem_to_bram_converter_row.ce1, %mem_to_bram_converter_row.we1, %mem_to_bram_converter_row.address1, %mem_to_bram_converter_row.dout1, %mem_to_bram_converter_col.ce0, %mem_to_bram_converter_col.we0, %mem_to_bram_converter_col.address0, %mem_to_bram_converter_col.dout0, %mem_to_bram_converter_col.ce1, %mem_to_bram_converter_col.we1, %mem_to_bram_converter_col.address1, %mem_to_bram_converter_col.dout1, %mem_to_bram_converter_val.ce0, %mem_to_bram_converter_val.we0, %mem_to_bram_converter_val.address0, %mem_to_bram_converter_val.dout0, %mem_to_bram_converter_val.ce1, %mem_to_bram_converter_val.we1, %mem_to_bram_converter_val.address1, %mem_to_bram_converter_val.dout1, %mem_to_bram_converter_vec.ce0, %mem_to_bram_converter_vec.we0, %mem_to_bram_converter_vec.address0, %mem_to_bram_converter_vec.dout0, %mem_to_bram_converter_vec.ce1, %mem_to_bram_converter_vec.we1, %mem_to_bram_converter_vec.address1, %mem_to_bram_converter_vec.dout1, %mem_to_bram_converter_out.ce0, %mem_to_bram_converter_out.we0, %mem_to_bram_converter_out.address0, %mem_to_bram_converter_out.dout0, %mem_to_bram_converter_out.ce1, %mem_to_bram_converter_out.we1, %mem_to_bram_converter_out.address1, %mem_to_bram_converter_out.dout1 : !handshake.channel<i32>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, !handshake.control<>, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32, i1, i1, i4, i32
  }
}

